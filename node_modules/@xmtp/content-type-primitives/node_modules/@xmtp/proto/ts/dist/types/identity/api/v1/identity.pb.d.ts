import Long from "long";
import { IdentityUpdate } from "../../associations/association.pb";
import _m0 from "protobufjs/minimal";
export declare const protobufPackage = "xmtp.identity.api.v1";
/** Message API */
export interface VerifySmartContractWalletSignaturesRequest {
    signatures: VerifySmartContractWalletSignatureRequestSignature[];
}
export interface VerifySmartContractWalletSignatureRequestSignature {
    /**
     * CAIP-10 string
     * https://github.com/ChainAgnostic/CAIPs/blob/main/CAIPs/caip-10.md
     */
    accountId: string;
    /** Specify the block number to verify the signature against */
    blockNumber?: Long | undefined;
    /** The signature bytes */
    signature: Uint8Array;
    hash: Uint8Array;
}
export interface VerifySmartContractWalletSignaturesResponse {
    responses: VerifySmartContractWalletSignaturesResponse_ValidationResponse[];
}
export interface VerifySmartContractWalletSignaturesResponse_ValidationResponse {
    isValid: boolean;
    blockNumber?: Long | undefined;
    error?: string | undefined;
}
/** Publishes an identity update to the network */
export interface PublishIdentityUpdateRequest {
    identityUpdate: IdentityUpdate | undefined;
}
/** The response when an identity update is published */
export interface PublishIdentityUpdateResponse {
}
/** Get all updates for an identity since the specified time */
export interface GetIdentityUpdatesRequest {
    requests: GetIdentityUpdatesRequest_Request[];
}
/**
 * Points to the last entry the client has received. The sequence_id should be
 * set to 0 if the client has not received anything.
 */
export interface GetIdentityUpdatesRequest_Request {
    inboxId: string;
    sequenceId: Long;
}
/** Returns all log entries for the requested identities */
export interface GetIdentityUpdatesResponse {
    responses: GetIdentityUpdatesResponse_Response[];
}
/** A single entry in the XID log on the server. */
export interface GetIdentityUpdatesResponse_IdentityUpdateLog {
    sequenceId: Long;
    serverTimestampNs: Long;
    update: IdentityUpdate | undefined;
}
/** The update log for a single identity, starting after the last cursor */
export interface GetIdentityUpdatesResponse_Response {
    inboxId: string;
    updates: GetIdentityUpdatesResponse_IdentityUpdateLog[];
}
/** Request to retrieve the XIDs for the given addresses */
export interface GetInboxIdsRequest {
    requests: GetInboxIdsRequest_Request[];
}
/** A single request for a given address */
export interface GetInboxIdsRequest_Request {
    address: string;
}
/** Response with the XIDs for the requested addresses */
export interface GetInboxIdsResponse {
    responses: GetInboxIdsResponse_Response[];
}
/** A single response for a given address */
export interface GetInboxIdsResponse_Response {
    address: string;
    inboxId?: string | undefined;
}
export declare const VerifySmartContractWalletSignaturesRequest: {
    encode(message: VerifySmartContractWalletSignaturesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): VerifySmartContractWalletSignaturesRequest;
    fromJSON(object: any): VerifySmartContractWalletSignaturesRequest;
    toJSON(message: VerifySmartContractWalletSignaturesRequest): unknown;
    fromPartial<I extends {
        signatures?: {
            accountId?: string | undefined;
            blockNumber?: string | number | Long | undefined;
            signature?: Uint8Array | undefined;
            hash?: Uint8Array | undefined;
        }[] | undefined;
    } & {
        signatures?: ({
            accountId?: string | undefined;
            blockNumber?: string | number | Long | undefined;
            signature?: Uint8Array | undefined;
            hash?: Uint8Array | undefined;
        }[] & ({
            accountId?: string | undefined;
            blockNumber?: string | number | Long | undefined;
            signature?: Uint8Array | undefined;
            hash?: Uint8Array | undefined;
        } & {
            accountId?: string | undefined;
            blockNumber?: string | number | (Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | Long) => Long;
                and: (other: string | number | Long) => Long;
                compare: (other: string | number | Long) => number;
                comp: (other: string | number | Long) => number;
                divide: (divisor: string | number | Long) => Long;
                div: (divisor: string | number | Long) => Long;
                equals: (other: string | number | Long) => boolean;
                eq: (other: string | number | Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | Long) => boolean;
                gt: (other: string | number | Long) => boolean;
                greaterThanOrEqual: (other: string | number | Long) => boolean;
                gte: (other: string | number | Long) => boolean;
                ge: (other: string | number | Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                eqz: () => boolean;
                lessThan: (other: string | number | Long) => boolean;
                lt: (other: string | number | Long) => boolean;
                lessThanOrEqual: (other: string | number | Long) => boolean;
                lte: (other: string | number | Long) => boolean;
                le: (other: string | number | Long) => boolean;
                modulo: (other: string | number | Long) => Long;
                mod: (other: string | number | Long) => Long;
                rem: (other: string | number | Long) => Long;
                multiply: (multiplier: string | number | Long) => Long;
                mul: (multiplier: string | number | Long) => Long;
                negate: () => Long;
                neg: () => Long;
                not: () => Long;
                countLeadingZeros: () => number;
                clz: () => number;
                countTrailingZeros: () => number;
                ctz: () => number;
                notEquals: (other: string | number | Long) => boolean;
                neq: (other: string | number | Long) => boolean;
                ne: (other: string | number | Long) => boolean;
                or: (other: string | number | Long) => Long;
                shiftLeft: (numBits: number | Long) => Long;
                shl: (numBits: number | Long) => Long;
                shiftRight: (numBits: number | Long) => Long;
                shr: (numBits: number | Long) => Long;
                shiftRightUnsigned: (numBits: number | Long) => Long;
                shru: (numBits: number | Long) => Long;
                shr_u: (numBits: number | Long) => Long;
                rotateLeft: (numBits: number | Long) => Long;
                rotl: (numBits: number | Long) => Long;
                rotateRight: (numBits: number | Long) => Long;
                rotr: (numBits: number | Long) => Long;
                subtract: (subtrahend: string | number | Long) => Long;
                sub: (subtrahend: string | number | Long) => Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean | undefined) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => Long;
                toString: (radix?: number | undefined) => string;
                toUnsigned: () => Long;
                xor: (other: string | number | Long) => Long;
            } & { [K in Exclude<keyof I["signatures"][number]["blockNumber"], keyof Long>]: never; }) | undefined;
            signature?: Uint8Array | undefined;
            hash?: Uint8Array | undefined;
        } & { [K_1 in Exclude<keyof I["signatures"][number], keyof VerifySmartContractWalletSignatureRequestSignature>]: never; })[] & { [K_2 in Exclude<keyof I["signatures"], keyof {
            accountId?: string | undefined;
            blockNumber?: string | number | Long | undefined;
            signature?: Uint8Array | undefined;
            hash?: Uint8Array | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, "signatures">]: never; }>(object: I): VerifySmartContractWalletSignaturesRequest;
};
export declare const VerifySmartContractWalletSignatureRequestSignature: {
    encode(message: VerifySmartContractWalletSignatureRequestSignature, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): VerifySmartContractWalletSignatureRequestSignature;
    fromJSON(object: any): VerifySmartContractWalletSignatureRequestSignature;
    toJSON(message: VerifySmartContractWalletSignatureRequestSignature): unknown;
    fromPartial<I extends {
        accountId?: string | undefined;
        blockNumber?: string | number | Long | undefined;
        signature?: Uint8Array | undefined;
        hash?: Uint8Array | undefined;
    } & {
        accountId?: string | undefined;
        blockNumber?: string | number | (Long & {
            high: number;
            low: number;
            unsigned: boolean;
            add: (addend: string | number | Long) => Long;
            and: (other: string | number | Long) => Long;
            compare: (other: string | number | Long) => number;
            comp: (other: string | number | Long) => number;
            divide: (divisor: string | number | Long) => Long;
            div: (divisor: string | number | Long) => Long;
            equals: (other: string | number | Long) => boolean;
            eq: (other: string | number | Long) => boolean;
            getHighBits: () => number;
            getHighBitsUnsigned: () => number;
            getLowBits: () => number;
            getLowBitsUnsigned: () => number;
            getNumBitsAbs: () => number;
            greaterThan: (other: string | number | Long) => boolean;
            gt: (other: string | number | Long) => boolean;
            greaterThanOrEqual: (other: string | number | Long) => boolean;
            gte: (other: string | number | Long) => boolean;
            ge: (other: string | number | Long) => boolean;
            isEven: () => boolean;
            isNegative: () => boolean;
            isOdd: () => boolean;
            isPositive: () => boolean;
            isZero: () => boolean;
            eqz: () => boolean;
            lessThan: (other: string | number | Long) => boolean;
            lt: (other: string | number | Long) => boolean;
            lessThanOrEqual: (other: string | number | Long) => boolean;
            lte: (other: string | number | Long) => boolean;
            le: (other: string | number | Long) => boolean;
            modulo: (other: string | number | Long) => Long;
            mod: (other: string | number | Long) => Long;
            rem: (other: string | number | Long) => Long;
            multiply: (multiplier: string | number | Long) => Long;
            mul: (multiplier: string | number | Long) => Long;
            negate: () => Long;
            neg: () => Long;
            not: () => Long;
            countLeadingZeros: () => number;
            clz: () => number;
            countTrailingZeros: () => number;
            ctz: () => number;
            notEquals: (other: string | number | Long) => boolean;
            neq: (other: string | number | Long) => boolean;
            ne: (other: string | number | Long) => boolean;
            or: (other: string | number | Long) => Long;
            shiftLeft: (numBits: number | Long) => Long;
            shl: (numBits: number | Long) => Long;
            shiftRight: (numBits: number | Long) => Long;
            shr: (numBits: number | Long) => Long;
            shiftRightUnsigned: (numBits: number | Long) => Long;
            shru: (numBits: number | Long) => Long;
            shr_u: (numBits: number | Long) => Long;
            rotateLeft: (numBits: number | Long) => Long;
            rotl: (numBits: number | Long) => Long;
            rotateRight: (numBits: number | Long) => Long;
            rotr: (numBits: number | Long) => Long;
            subtract: (subtrahend: string | number | Long) => Long;
            sub: (subtrahend: string | number | Long) => Long;
            toInt: () => number;
            toNumber: () => number;
            toBytes: (le?: boolean | undefined) => number[];
            toBytesLE: () => number[];
            toBytesBE: () => number[];
            toSigned: () => Long;
            toString: (radix?: number | undefined) => string;
            toUnsigned: () => Long;
            xor: (other: string | number | Long) => Long;
        } & { [K in Exclude<keyof I["blockNumber"], keyof Long>]: never; }) | undefined;
        signature?: Uint8Array | undefined;
        hash?: Uint8Array | undefined;
    } & { [K_1 in Exclude<keyof I, keyof VerifySmartContractWalletSignatureRequestSignature>]: never; }>(object: I): VerifySmartContractWalletSignatureRequestSignature;
};
export declare const VerifySmartContractWalletSignaturesResponse: {
    encode(message: VerifySmartContractWalletSignaturesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): VerifySmartContractWalletSignaturesResponse;
    fromJSON(object: any): VerifySmartContractWalletSignaturesResponse;
    toJSON(message: VerifySmartContractWalletSignaturesResponse): unknown;
    fromPartial<I extends {
        responses?: {
            isValid?: boolean | undefined;
            blockNumber?: string | number | Long | undefined;
            error?: string | undefined;
        }[] | undefined;
    } & {
        responses?: ({
            isValid?: boolean | undefined;
            blockNumber?: string | number | Long | undefined;
            error?: string | undefined;
        }[] & ({
            isValid?: boolean | undefined;
            blockNumber?: string | number | Long | undefined;
            error?: string | undefined;
        } & {
            isValid?: boolean | undefined;
            blockNumber?: string | number | (Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | Long) => Long;
                and: (other: string | number | Long) => Long;
                compare: (other: string | number | Long) => number;
                comp: (other: string | number | Long) => number;
                divide: (divisor: string | number | Long) => Long;
                div: (divisor: string | number | Long) => Long;
                equals: (other: string | number | Long) => boolean;
                eq: (other: string | number | Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | Long) => boolean;
                gt: (other: string | number | Long) => boolean;
                greaterThanOrEqual: (other: string | number | Long) => boolean;
                gte: (other: string | number | Long) => boolean;
                ge: (other: string | number | Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                eqz: () => boolean;
                lessThan: (other: string | number | Long) => boolean;
                lt: (other: string | number | Long) => boolean;
                lessThanOrEqual: (other: string | number | Long) => boolean;
                lte: (other: string | number | Long) => boolean;
                le: (other: string | number | Long) => boolean;
                modulo: (other: string | number | Long) => Long;
                mod: (other: string | number | Long) => Long;
                rem: (other: string | number | Long) => Long;
                multiply: (multiplier: string | number | Long) => Long;
                mul: (multiplier: string | number | Long) => Long;
                negate: () => Long;
                neg: () => Long;
                not: () => Long;
                countLeadingZeros: () => number;
                clz: () => number;
                countTrailingZeros: () => number;
                ctz: () => number;
                notEquals: (other: string | number | Long) => boolean;
                neq: (other: string | number | Long) => boolean;
                ne: (other: string | number | Long) => boolean;
                or: (other: string | number | Long) => Long;
                shiftLeft: (numBits: number | Long) => Long;
                shl: (numBits: number | Long) => Long;
                shiftRight: (numBits: number | Long) => Long;
                shr: (numBits: number | Long) => Long;
                shiftRightUnsigned: (numBits: number | Long) => Long;
                shru: (numBits: number | Long) => Long;
                shr_u: (numBits: number | Long) => Long;
                rotateLeft: (numBits: number | Long) => Long;
                rotl: (numBits: number | Long) => Long;
                rotateRight: (numBits: number | Long) => Long;
                rotr: (numBits: number | Long) => Long;
                subtract: (subtrahend: string | number | Long) => Long;
                sub: (subtrahend: string | number | Long) => Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean | undefined) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => Long;
                toString: (radix?: number | undefined) => string;
                toUnsigned: () => Long;
                xor: (other: string | number | Long) => Long;
            } & { [K in Exclude<keyof I["responses"][number]["blockNumber"], keyof Long>]: never; }) | undefined;
            error?: string | undefined;
        } & { [K_1 in Exclude<keyof I["responses"][number], keyof VerifySmartContractWalletSignaturesResponse_ValidationResponse>]: never; })[] & { [K_2 in Exclude<keyof I["responses"], keyof {
            isValid?: boolean | undefined;
            blockNumber?: string | number | Long | undefined;
            error?: string | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, "responses">]: never; }>(object: I): VerifySmartContractWalletSignaturesResponse;
};
export declare const VerifySmartContractWalletSignaturesResponse_ValidationResponse: {
    encode(message: VerifySmartContractWalletSignaturesResponse_ValidationResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): VerifySmartContractWalletSignaturesResponse_ValidationResponse;
    fromJSON(object: any): VerifySmartContractWalletSignaturesResponse_ValidationResponse;
    toJSON(message: VerifySmartContractWalletSignaturesResponse_ValidationResponse): unknown;
    fromPartial<I extends {
        isValid?: boolean | undefined;
        blockNumber?: string | number | Long | undefined;
        error?: string | undefined;
    } & {
        isValid?: boolean | undefined;
        blockNumber?: string | number | (Long & {
            high: number;
            low: number;
            unsigned: boolean;
            add: (addend: string | number | Long) => Long;
            and: (other: string | number | Long) => Long;
            compare: (other: string | number | Long) => number;
            comp: (other: string | number | Long) => number;
            divide: (divisor: string | number | Long) => Long;
            div: (divisor: string | number | Long) => Long;
            equals: (other: string | number | Long) => boolean;
            eq: (other: string | number | Long) => boolean;
            getHighBits: () => number;
            getHighBitsUnsigned: () => number;
            getLowBits: () => number;
            getLowBitsUnsigned: () => number;
            getNumBitsAbs: () => number;
            greaterThan: (other: string | number | Long) => boolean;
            gt: (other: string | number | Long) => boolean;
            greaterThanOrEqual: (other: string | number | Long) => boolean;
            gte: (other: string | number | Long) => boolean;
            ge: (other: string | number | Long) => boolean;
            isEven: () => boolean;
            isNegative: () => boolean;
            isOdd: () => boolean;
            isPositive: () => boolean;
            isZero: () => boolean;
            eqz: () => boolean;
            lessThan: (other: string | number | Long) => boolean;
            lt: (other: string | number | Long) => boolean;
            lessThanOrEqual: (other: string | number | Long) => boolean;
            lte: (other: string | number | Long) => boolean;
            le: (other: string | number | Long) => boolean;
            modulo: (other: string | number | Long) => Long;
            mod: (other: string | number | Long) => Long;
            rem: (other: string | number | Long) => Long;
            multiply: (multiplier: string | number | Long) => Long;
            mul: (multiplier: string | number | Long) => Long;
            negate: () => Long;
            neg: () => Long;
            not: () => Long;
            countLeadingZeros: () => number;
            clz: () => number;
            countTrailingZeros: () => number;
            ctz: () => number;
            notEquals: (other: string | number | Long) => boolean;
            neq: (other: string | number | Long) => boolean;
            ne: (other: string | number | Long) => boolean;
            or: (other: string | number | Long) => Long;
            shiftLeft: (numBits: number | Long) => Long;
            shl: (numBits: number | Long) => Long;
            shiftRight: (numBits: number | Long) => Long;
            shr: (numBits: number | Long) => Long;
            shiftRightUnsigned: (numBits: number | Long) => Long;
            shru: (numBits: number | Long) => Long;
            shr_u: (numBits: number | Long) => Long;
            rotateLeft: (numBits: number | Long) => Long;
            rotl: (numBits: number | Long) => Long;
            rotateRight: (numBits: number | Long) => Long;
            rotr: (numBits: number | Long) => Long;
            subtract: (subtrahend: string | number | Long) => Long;
            sub: (subtrahend: string | number | Long) => Long;
            toInt: () => number;
            toNumber: () => number;
            toBytes: (le?: boolean | undefined) => number[];
            toBytesLE: () => number[];
            toBytesBE: () => number[];
            toSigned: () => Long;
            toString: (radix?: number | undefined) => string;
            toUnsigned: () => Long;
            xor: (other: string | number | Long) => Long;
        } & { [K in Exclude<keyof I["blockNumber"], keyof Long>]: never; }) | undefined;
        error?: string | undefined;
    } & { [K_1 in Exclude<keyof I, keyof VerifySmartContractWalletSignaturesResponse_ValidationResponse>]: never; }>(object: I): VerifySmartContractWalletSignaturesResponse_ValidationResponse;
};
export declare const PublishIdentityUpdateRequest: {
    encode(message: PublishIdentityUpdateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): PublishIdentityUpdateRequest;
    fromJSON(object: any): PublishIdentityUpdateRequest;
    toJSON(message: PublishIdentityUpdateRequest): unknown;
    fromPartial<I extends {
        identityUpdate?: {
            actions?: {
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[] | undefined;
            clientTimestampNs?: string | number | Long | undefined;
            inboxId?: string | undefined;
        } | undefined;
    } & {
        identityUpdate?: ({
            actions?: {
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[] | undefined;
            clientTimestampNs?: string | number | Long | undefined;
            inboxId?: string | undefined;
        } & {
            actions?: ({
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[] & ({
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            } & {
                createInbox?: ({
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    initialAddress?: string | undefined;
                    nonce?: string | number | (Long & {
                        high: number;
                        low: number;
                        unsigned: boolean;
                        add: (addend: string | number | Long) => Long;
                        and: (other: string | number | Long) => Long;
                        compare: (other: string | number | Long) => number;
                        comp: (other: string | number | Long) => number;
                        divide: (divisor: string | number | Long) => Long;
                        div: (divisor: string | number | Long) => Long;
                        equals: (other: string | number | Long) => boolean;
                        eq: (other: string | number | Long) => boolean;
                        getHighBits: () => number;
                        getHighBitsUnsigned: () => number;
                        getLowBits: () => number;
                        getLowBitsUnsigned: () => number;
                        getNumBitsAbs: () => number;
                        greaterThan: (other: string | number | Long) => boolean;
                        gt: (other: string | number | Long) => boolean;
                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                        gte: (other: string | number | Long) => boolean;
                        ge: (other: string | number | Long) => boolean;
                        isEven: () => boolean;
                        isNegative: () => boolean;
                        isOdd: () => boolean;
                        isPositive: () => boolean;
                        isZero: () => boolean;
                        eqz: () => boolean;
                        lessThan: (other: string | number | Long) => boolean;
                        lt: (other: string | number | Long) => boolean;
                        lessThanOrEqual: (other: string | number | Long) => boolean;
                        lte: (other: string | number | Long) => boolean;
                        le: (other: string | number | Long) => boolean;
                        modulo: (other: string | number | Long) => Long;
                        mod: (other: string | number | Long) => Long;
                        rem: (other: string | number | Long) => Long;
                        multiply: (multiplier: string | number | Long) => Long;
                        mul: (multiplier: string | number | Long) => Long;
                        negate: () => Long;
                        neg: () => Long;
                        not: () => Long;
                        countLeadingZeros: () => number;
                        clz: () => number;
                        countTrailingZeros: () => number;
                        ctz: () => number;
                        notEquals: (other: string | number | Long) => boolean;
                        neq: (other: string | number | Long) => boolean;
                        ne: (other: string | number | Long) => boolean;
                        or: (other: string | number | Long) => Long;
                        shiftLeft: (numBits: number | Long) => Long;
                        shl: (numBits: number | Long) => Long;
                        shiftRight: (numBits: number | Long) => Long;
                        shr: (numBits: number | Long) => Long;
                        shiftRightUnsigned: (numBits: number | Long) => Long;
                        shru: (numBits: number | Long) => Long;
                        shr_u: (numBits: number | Long) => Long;
                        rotateLeft: (numBits: number | Long) => Long;
                        rotl: (numBits: number | Long) => Long;
                        rotateRight: (numBits: number | Long) => Long;
                        rotr: (numBits: number | Long) => Long;
                        subtract: (subtrahend: string | number | Long) => Long;
                        sub: (subtrahend: string | number | Long) => Long;
                        toInt: () => number;
                        toNumber: () => number;
                        toBytes: (le?: boolean | undefined) => number[];
                        toBytesLE: () => number[];
                        toBytesBE: () => number[];
                        toSigned: () => Long;
                        toString: (radix?: number | undefined) => string;
                        toUnsigned: () => Long;
                        xor: (other: string | number | Long) => Long;
                    } & { [K in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["nonce"], keyof Long>]: never; }) | undefined;
                    initialAddressSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_1 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_2 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_3 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_4 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_5 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_6 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_7 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_8 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_9 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_10 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_11 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"]["initialAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_12 in Exclude<keyof I["identityUpdate"]["actions"][number]["createInbox"], keyof import("../../associations/association.pb").CreateInbox>]: never; }) | undefined;
                add?: ({
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    newMemberIdentifier?: ({
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & { [K_13 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberIdentifier"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                    existingMemberSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_14 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_15 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_16 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_17 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_18 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_19 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_20 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_21 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_22 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_23 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_24 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["existingMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                    newMemberSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_25 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_26 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_27 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_28 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_29 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_30 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_31 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_32 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_33 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_34 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_35 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"]["newMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_36 in Exclude<keyof I["identityUpdate"]["actions"][number]["add"], keyof import("../../associations/association.pb").AddAssociation>]: never; }) | undefined;
                revoke?: ({
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    memberToRevoke?: ({
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & { [K_37 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["memberToRevoke"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                    recoveryAddressSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_38 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_39 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_40 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_41 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_42 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_43 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_44 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_45 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_46 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_47 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_48 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"]["recoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_49 in Exclude<keyof I["identityUpdate"]["actions"][number]["revoke"], keyof import("../../associations/association.pb").RevokeAssociation>]: never; }) | undefined;
                changeRecoveryAddress?: ({
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_50 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_51 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_52 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_53 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_54 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_55 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_56 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_57 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_58 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_59 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_60 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_61 in Exclude<keyof I["identityUpdate"]["actions"][number]["changeRecoveryAddress"], keyof import("../../associations/association.pb").ChangeRecoveryAddress>]: never; }) | undefined;
            } & { [K_62 in Exclude<keyof I["identityUpdate"]["actions"][number], keyof import("../../associations/association.pb").IdentityAction>]: never; })[] & { [K_63 in Exclude<keyof I["identityUpdate"]["actions"], keyof {
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
            clientTimestampNs?: string | number | (Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | Long) => Long;
                and: (other: string | number | Long) => Long;
                compare: (other: string | number | Long) => number;
                comp: (other: string | number | Long) => number;
                divide: (divisor: string | number | Long) => Long;
                div: (divisor: string | number | Long) => Long;
                equals: (other: string | number | Long) => boolean;
                eq: (other: string | number | Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | Long) => boolean;
                gt: (other: string | number | Long) => boolean;
                greaterThanOrEqual: (other: string | number | Long) => boolean;
                gte: (other: string | number | Long) => boolean;
                ge: (other: string | number | Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                eqz: () => boolean;
                lessThan: (other: string | number | Long) => boolean;
                lt: (other: string | number | Long) => boolean;
                lessThanOrEqual: (other: string | number | Long) => boolean;
                lte: (other: string | number | Long) => boolean;
                le: (other: string | number | Long) => boolean;
                modulo: (other: string | number | Long) => Long;
                mod: (other: string | number | Long) => Long;
                rem: (other: string | number | Long) => Long;
                multiply: (multiplier: string | number | Long) => Long;
                mul: (multiplier: string | number | Long) => Long;
                negate: () => Long;
                neg: () => Long;
                not: () => Long;
                countLeadingZeros: () => number;
                clz: () => number;
                countTrailingZeros: () => number;
                ctz: () => number;
                notEquals: (other: string | number | Long) => boolean;
                neq: (other: string | number | Long) => boolean;
                ne: (other: string | number | Long) => boolean;
                or: (other: string | number | Long) => Long;
                shiftLeft: (numBits: number | Long) => Long;
                shl: (numBits: number | Long) => Long;
                shiftRight: (numBits: number | Long) => Long;
                shr: (numBits: number | Long) => Long;
                shiftRightUnsigned: (numBits: number | Long) => Long;
                shru: (numBits: number | Long) => Long;
                shr_u: (numBits: number | Long) => Long;
                rotateLeft: (numBits: number | Long) => Long;
                rotl: (numBits: number | Long) => Long;
                rotateRight: (numBits: number | Long) => Long;
                rotr: (numBits: number | Long) => Long;
                subtract: (subtrahend: string | number | Long) => Long;
                sub: (subtrahend: string | number | Long) => Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean | undefined) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => Long;
                toString: (radix?: number | undefined) => string;
                toUnsigned: () => Long;
                xor: (other: string | number | Long) => Long;
            } & { [K_64 in Exclude<keyof I["identityUpdate"]["clientTimestampNs"], keyof Long>]: never; }) | undefined;
            inboxId?: string | undefined;
        } & { [K_65 in Exclude<keyof I["identityUpdate"], keyof IdentityUpdate>]: never; }) | undefined;
    } & { [K_66 in Exclude<keyof I, "identityUpdate">]: never; }>(object: I): PublishIdentityUpdateRequest;
};
export declare const PublishIdentityUpdateResponse: {
    encode(_: PublishIdentityUpdateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): PublishIdentityUpdateResponse;
    fromJSON(_: any): PublishIdentityUpdateResponse;
    toJSON(_: PublishIdentityUpdateResponse): unknown;
    fromPartial<I extends {} & {} & { [K in Exclude<keyof I, never>]: never; }>(_: I): PublishIdentityUpdateResponse;
};
export declare const GetIdentityUpdatesRequest: {
    encode(message: GetIdentityUpdatesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetIdentityUpdatesRequest;
    fromJSON(object: any): GetIdentityUpdatesRequest;
    toJSON(message: GetIdentityUpdatesRequest): unknown;
    fromPartial<I extends {
        requests?: {
            inboxId?: string | undefined;
            sequenceId?: string | number | Long | undefined;
        }[] | undefined;
    } & {
        requests?: ({
            inboxId?: string | undefined;
            sequenceId?: string | number | Long | undefined;
        }[] & ({
            inboxId?: string | undefined;
            sequenceId?: string | number | Long | undefined;
        } & {
            inboxId?: string | undefined;
            sequenceId?: string | number | (Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | Long) => Long;
                and: (other: string | number | Long) => Long;
                compare: (other: string | number | Long) => number;
                comp: (other: string | number | Long) => number;
                divide: (divisor: string | number | Long) => Long;
                div: (divisor: string | number | Long) => Long;
                equals: (other: string | number | Long) => boolean;
                eq: (other: string | number | Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | Long) => boolean;
                gt: (other: string | number | Long) => boolean;
                greaterThanOrEqual: (other: string | number | Long) => boolean;
                gte: (other: string | number | Long) => boolean;
                ge: (other: string | number | Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                eqz: () => boolean;
                lessThan: (other: string | number | Long) => boolean;
                lt: (other: string | number | Long) => boolean;
                lessThanOrEqual: (other: string | number | Long) => boolean;
                lte: (other: string | number | Long) => boolean;
                le: (other: string | number | Long) => boolean;
                modulo: (other: string | number | Long) => Long;
                mod: (other: string | number | Long) => Long;
                rem: (other: string | number | Long) => Long;
                multiply: (multiplier: string | number | Long) => Long;
                mul: (multiplier: string | number | Long) => Long;
                negate: () => Long;
                neg: () => Long;
                not: () => Long;
                countLeadingZeros: () => number;
                clz: () => number;
                countTrailingZeros: () => number;
                ctz: () => number;
                notEquals: (other: string | number | Long) => boolean;
                neq: (other: string | number | Long) => boolean;
                ne: (other: string | number | Long) => boolean;
                or: (other: string | number | Long) => Long;
                shiftLeft: (numBits: number | Long) => Long;
                shl: (numBits: number | Long) => Long;
                shiftRight: (numBits: number | Long) => Long;
                shr: (numBits: number | Long) => Long;
                shiftRightUnsigned: (numBits: number | Long) => Long;
                shru: (numBits: number | Long) => Long;
                shr_u: (numBits: number | Long) => Long;
                rotateLeft: (numBits: number | Long) => Long;
                rotl: (numBits: number | Long) => Long;
                rotateRight: (numBits: number | Long) => Long;
                rotr: (numBits: number | Long) => Long;
                subtract: (subtrahend: string | number | Long) => Long;
                sub: (subtrahend: string | number | Long) => Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean | undefined) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => Long;
                toString: (radix?: number | undefined) => string;
                toUnsigned: () => Long;
                xor: (other: string | number | Long) => Long;
            } & { [K in Exclude<keyof I["requests"][number]["sequenceId"], keyof Long>]: never; }) | undefined;
        } & { [K_1 in Exclude<keyof I["requests"][number], keyof GetIdentityUpdatesRequest_Request>]: never; })[] & { [K_2 in Exclude<keyof I["requests"], keyof {
            inboxId?: string | undefined;
            sequenceId?: string | number | Long | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_3 in Exclude<keyof I, "requests">]: never; }>(object: I): GetIdentityUpdatesRequest;
};
export declare const GetIdentityUpdatesRequest_Request: {
    encode(message: GetIdentityUpdatesRequest_Request, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetIdentityUpdatesRequest_Request;
    fromJSON(object: any): GetIdentityUpdatesRequest_Request;
    toJSON(message: GetIdentityUpdatesRequest_Request): unknown;
    fromPartial<I extends {
        inboxId?: string | undefined;
        sequenceId?: string | number | Long | undefined;
    } & {
        inboxId?: string | undefined;
        sequenceId?: string | number | (Long & {
            high: number;
            low: number;
            unsigned: boolean;
            add: (addend: string | number | Long) => Long;
            and: (other: string | number | Long) => Long;
            compare: (other: string | number | Long) => number;
            comp: (other: string | number | Long) => number;
            divide: (divisor: string | number | Long) => Long;
            div: (divisor: string | number | Long) => Long;
            equals: (other: string | number | Long) => boolean;
            eq: (other: string | number | Long) => boolean;
            getHighBits: () => number;
            getHighBitsUnsigned: () => number;
            getLowBits: () => number;
            getLowBitsUnsigned: () => number;
            getNumBitsAbs: () => number;
            greaterThan: (other: string | number | Long) => boolean;
            gt: (other: string | number | Long) => boolean;
            greaterThanOrEqual: (other: string | number | Long) => boolean;
            gte: (other: string | number | Long) => boolean;
            ge: (other: string | number | Long) => boolean;
            isEven: () => boolean;
            isNegative: () => boolean;
            isOdd: () => boolean;
            isPositive: () => boolean;
            isZero: () => boolean;
            eqz: () => boolean;
            lessThan: (other: string | number | Long) => boolean;
            lt: (other: string | number | Long) => boolean;
            lessThanOrEqual: (other: string | number | Long) => boolean;
            lte: (other: string | number | Long) => boolean;
            le: (other: string | number | Long) => boolean;
            modulo: (other: string | number | Long) => Long;
            mod: (other: string | number | Long) => Long;
            rem: (other: string | number | Long) => Long;
            multiply: (multiplier: string | number | Long) => Long;
            mul: (multiplier: string | number | Long) => Long;
            negate: () => Long;
            neg: () => Long;
            not: () => Long;
            countLeadingZeros: () => number;
            clz: () => number;
            countTrailingZeros: () => number;
            ctz: () => number;
            notEquals: (other: string | number | Long) => boolean;
            neq: (other: string | number | Long) => boolean;
            ne: (other: string | number | Long) => boolean;
            or: (other: string | number | Long) => Long;
            shiftLeft: (numBits: number | Long) => Long;
            shl: (numBits: number | Long) => Long;
            shiftRight: (numBits: number | Long) => Long;
            shr: (numBits: number | Long) => Long;
            shiftRightUnsigned: (numBits: number | Long) => Long;
            shru: (numBits: number | Long) => Long;
            shr_u: (numBits: number | Long) => Long;
            rotateLeft: (numBits: number | Long) => Long;
            rotl: (numBits: number | Long) => Long;
            rotateRight: (numBits: number | Long) => Long;
            rotr: (numBits: number | Long) => Long;
            subtract: (subtrahend: string | number | Long) => Long;
            sub: (subtrahend: string | number | Long) => Long;
            toInt: () => number;
            toNumber: () => number;
            toBytes: (le?: boolean | undefined) => number[];
            toBytesLE: () => number[];
            toBytesBE: () => number[];
            toSigned: () => Long;
            toString: (radix?: number | undefined) => string;
            toUnsigned: () => Long;
            xor: (other: string | number | Long) => Long;
        } & { [K in Exclude<keyof I["sequenceId"], keyof Long>]: never; }) | undefined;
    } & { [K_1 in Exclude<keyof I, keyof GetIdentityUpdatesRequest_Request>]: never; }>(object: I): GetIdentityUpdatesRequest_Request;
};
export declare const GetIdentityUpdatesResponse: {
    encode(message: GetIdentityUpdatesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetIdentityUpdatesResponse;
    fromJSON(object: any): GetIdentityUpdatesResponse;
    toJSON(message: GetIdentityUpdatesResponse): unknown;
    fromPartial<I extends {
        responses?: {
            inboxId?: string | undefined;
            updates?: {
                sequenceId?: string | number | Long | undefined;
                serverTimestampNs?: string | number | Long | undefined;
                update?: {
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } | undefined;
            }[] | undefined;
        }[] | undefined;
    } & {
        responses?: ({
            inboxId?: string | undefined;
            updates?: {
                sequenceId?: string | number | Long | undefined;
                serverTimestampNs?: string | number | Long | undefined;
                update?: {
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } | undefined;
            }[] | undefined;
        }[] & ({
            inboxId?: string | undefined;
            updates?: {
                sequenceId?: string | number | Long | undefined;
                serverTimestampNs?: string | number | Long | undefined;
                update?: {
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } | undefined;
            }[] | undefined;
        } & {
            inboxId?: string | undefined;
            updates?: ({
                sequenceId?: string | number | Long | undefined;
                serverTimestampNs?: string | number | Long | undefined;
                update?: {
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } | undefined;
            }[] & ({
                sequenceId?: string | number | Long | undefined;
                serverTimestampNs?: string | number | Long | undefined;
                update?: {
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } | undefined;
            } & {
                sequenceId?: string | number | (Long & {
                    high: number;
                    low: number;
                    unsigned: boolean;
                    add: (addend: string | number | Long) => Long;
                    and: (other: string | number | Long) => Long;
                    compare: (other: string | number | Long) => number;
                    comp: (other: string | number | Long) => number;
                    divide: (divisor: string | number | Long) => Long;
                    div: (divisor: string | number | Long) => Long;
                    equals: (other: string | number | Long) => boolean;
                    eq: (other: string | number | Long) => boolean;
                    getHighBits: () => number;
                    getHighBitsUnsigned: () => number;
                    getLowBits: () => number;
                    getLowBitsUnsigned: () => number;
                    getNumBitsAbs: () => number;
                    greaterThan: (other: string | number | Long) => boolean;
                    gt: (other: string | number | Long) => boolean;
                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                    gte: (other: string | number | Long) => boolean;
                    ge: (other: string | number | Long) => boolean;
                    isEven: () => boolean;
                    isNegative: () => boolean;
                    isOdd: () => boolean;
                    isPositive: () => boolean;
                    isZero: () => boolean;
                    eqz: () => boolean;
                    lessThan: (other: string | number | Long) => boolean;
                    lt: (other: string | number | Long) => boolean;
                    lessThanOrEqual: (other: string | number | Long) => boolean;
                    lte: (other: string | number | Long) => boolean;
                    le: (other: string | number | Long) => boolean;
                    modulo: (other: string | number | Long) => Long;
                    mod: (other: string | number | Long) => Long;
                    rem: (other: string | number | Long) => Long;
                    multiply: (multiplier: string | number | Long) => Long;
                    mul: (multiplier: string | number | Long) => Long;
                    negate: () => Long;
                    neg: () => Long;
                    not: () => Long;
                    countLeadingZeros: () => number;
                    clz: () => number;
                    countTrailingZeros: () => number;
                    ctz: () => number;
                    notEquals: (other: string | number | Long) => boolean;
                    neq: (other: string | number | Long) => boolean;
                    ne: (other: string | number | Long) => boolean;
                    or: (other: string | number | Long) => Long;
                    shiftLeft: (numBits: number | Long) => Long;
                    shl: (numBits: number | Long) => Long;
                    shiftRight: (numBits: number | Long) => Long;
                    shr: (numBits: number | Long) => Long;
                    shiftRightUnsigned: (numBits: number | Long) => Long;
                    shru: (numBits: number | Long) => Long;
                    shr_u: (numBits: number | Long) => Long;
                    rotateLeft: (numBits: number | Long) => Long;
                    rotl: (numBits: number | Long) => Long;
                    rotateRight: (numBits: number | Long) => Long;
                    rotr: (numBits: number | Long) => Long;
                    subtract: (subtrahend: string | number | Long) => Long;
                    sub: (subtrahend: string | number | Long) => Long;
                    toInt: () => number;
                    toNumber: () => number;
                    toBytes: (le?: boolean | undefined) => number[];
                    toBytesLE: () => number[];
                    toBytesBE: () => number[];
                    toSigned: () => Long;
                    toString: (radix?: number | undefined) => string;
                    toUnsigned: () => Long;
                    xor: (other: string | number | Long) => Long;
                } & { [K in Exclude<keyof I["responses"][number]["updates"][number]["sequenceId"], keyof Long>]: never; }) | undefined;
                serverTimestampNs?: string | number | (Long & {
                    high: number;
                    low: number;
                    unsigned: boolean;
                    add: (addend: string | number | Long) => Long;
                    and: (other: string | number | Long) => Long;
                    compare: (other: string | number | Long) => number;
                    comp: (other: string | number | Long) => number;
                    divide: (divisor: string | number | Long) => Long;
                    div: (divisor: string | number | Long) => Long;
                    equals: (other: string | number | Long) => boolean;
                    eq: (other: string | number | Long) => boolean;
                    getHighBits: () => number;
                    getHighBitsUnsigned: () => number;
                    getLowBits: () => number;
                    getLowBitsUnsigned: () => number;
                    getNumBitsAbs: () => number;
                    greaterThan: (other: string | number | Long) => boolean;
                    gt: (other: string | number | Long) => boolean;
                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                    gte: (other: string | number | Long) => boolean;
                    ge: (other: string | number | Long) => boolean;
                    isEven: () => boolean;
                    isNegative: () => boolean;
                    isOdd: () => boolean;
                    isPositive: () => boolean;
                    isZero: () => boolean;
                    eqz: () => boolean;
                    lessThan: (other: string | number | Long) => boolean;
                    lt: (other: string | number | Long) => boolean;
                    lessThanOrEqual: (other: string | number | Long) => boolean;
                    lte: (other: string | number | Long) => boolean;
                    le: (other: string | number | Long) => boolean;
                    modulo: (other: string | number | Long) => Long;
                    mod: (other: string | number | Long) => Long;
                    rem: (other: string | number | Long) => Long;
                    multiply: (multiplier: string | number | Long) => Long;
                    mul: (multiplier: string | number | Long) => Long;
                    negate: () => Long;
                    neg: () => Long;
                    not: () => Long;
                    countLeadingZeros: () => number;
                    clz: () => number;
                    countTrailingZeros: () => number;
                    ctz: () => number;
                    notEquals: (other: string | number | Long) => boolean;
                    neq: (other: string | number | Long) => boolean;
                    ne: (other: string | number | Long) => boolean;
                    or: (other: string | number | Long) => Long;
                    shiftLeft: (numBits: number | Long) => Long;
                    shl: (numBits: number | Long) => Long;
                    shiftRight: (numBits: number | Long) => Long;
                    shr: (numBits: number | Long) => Long;
                    shiftRightUnsigned: (numBits: number | Long) => Long;
                    shru: (numBits: number | Long) => Long;
                    shr_u: (numBits: number | Long) => Long;
                    rotateLeft: (numBits: number | Long) => Long;
                    rotl: (numBits: number | Long) => Long;
                    rotateRight: (numBits: number | Long) => Long;
                    rotr: (numBits: number | Long) => Long;
                    subtract: (subtrahend: string | number | Long) => Long;
                    sub: (subtrahend: string | number | Long) => Long;
                    toInt: () => number;
                    toNumber: () => number;
                    toBytes: (le?: boolean | undefined) => number[];
                    toBytesLE: () => number[];
                    toBytesBE: () => number[];
                    toSigned: () => Long;
                    toString: (radix?: number | undefined) => string;
                    toUnsigned: () => Long;
                    xor: (other: string | number | Long) => Long;
                } & { [K_1 in Exclude<keyof I["responses"][number]["updates"][number]["serverTimestampNs"], keyof Long>]: never; }) | undefined;
                update?: ({
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } & {
                    actions?: ({
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] & ({
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        createInbox?: ({
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            initialAddress?: string | undefined;
                            nonce?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_2 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["nonce"], keyof Long>]: never; }) | undefined;
                            initialAddressSignature?: ({
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                erc191?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_3 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                                erc6492?: ({
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } & {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | (Long & {
                                        high: number;
                                        low: number;
                                        unsigned: boolean;
                                        add: (addend: string | number | Long) => Long;
                                        and: (other: string | number | Long) => Long;
                                        compare: (other: string | number | Long) => number;
                                        comp: (other: string | number | Long) => number;
                                        divide: (divisor: string | number | Long) => Long;
                                        div: (divisor: string | number | Long) => Long;
                                        equals: (other: string | number | Long) => boolean;
                                        eq: (other: string | number | Long) => boolean;
                                        getHighBits: () => number;
                                        getHighBitsUnsigned: () => number;
                                        getLowBits: () => number;
                                        getLowBitsUnsigned: () => number;
                                        getNumBitsAbs: () => number;
                                        greaterThan: (other: string | number | Long) => boolean;
                                        gt: (other: string | number | Long) => boolean;
                                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                                        gte: (other: string | number | Long) => boolean;
                                        ge: (other: string | number | Long) => boolean;
                                        isEven: () => boolean;
                                        isNegative: () => boolean;
                                        isOdd: () => boolean;
                                        isPositive: () => boolean;
                                        isZero: () => boolean;
                                        eqz: () => boolean;
                                        lessThan: (other: string | number | Long) => boolean;
                                        lt: (other: string | number | Long) => boolean;
                                        lessThanOrEqual: (other: string | number | Long) => boolean;
                                        lte: (other: string | number | Long) => boolean;
                                        le: (other: string | number | Long) => boolean;
                                        modulo: (other: string | number | Long) => Long;
                                        mod: (other: string | number | Long) => Long;
                                        rem: (other: string | number | Long) => Long;
                                        multiply: (multiplier: string | number | Long) => Long;
                                        mul: (multiplier: string | number | Long) => Long;
                                        negate: () => Long;
                                        neg: () => Long;
                                        not: () => Long;
                                        countLeadingZeros: () => number;
                                        clz: () => number;
                                        countTrailingZeros: () => number;
                                        ctz: () => number;
                                        notEquals: (other: string | number | Long) => boolean;
                                        neq: (other: string | number | Long) => boolean;
                                        ne: (other: string | number | Long) => boolean;
                                        or: (other: string | number | Long) => Long;
                                        shiftLeft: (numBits: number | Long) => Long;
                                        shl: (numBits: number | Long) => Long;
                                        shiftRight: (numBits: number | Long) => Long;
                                        shr: (numBits: number | Long) => Long;
                                        shiftRightUnsigned: (numBits: number | Long) => Long;
                                        shru: (numBits: number | Long) => Long;
                                        shr_u: (numBits: number | Long) => Long;
                                        rotateLeft: (numBits: number | Long) => Long;
                                        rotl: (numBits: number | Long) => Long;
                                        rotateRight: (numBits: number | Long) => Long;
                                        rotr: (numBits: number | Long) => Long;
                                        subtract: (subtrahend: string | number | Long) => Long;
                                        sub: (subtrahend: string | number | Long) => Long;
                                        toInt: () => number;
                                        toNumber: () => number;
                                        toBytes: (le?: boolean | undefined) => number[];
                                        toBytesLE: () => number[];
                                        toBytesBE: () => number[];
                                        toSigned: () => Long;
                                        toString: (radix?: number | undefined) => string;
                                        toUnsigned: () => Long;
                                        xor: (other: string | number | Long) => Long;
                                    } & { [K_4 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                    signature?: Uint8Array | undefined;
                                } & { [K_5 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                                installationKey?: ({
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & { [K_6 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                                delegatedErc191?: ({
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } & {
                                    delegatedKey?: ({
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } & {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: ({
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } & {
                                            ecdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_7 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                            walletEcdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_8 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                        } & { [K_9 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                    } & { [K_10 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                    signature?: ({
                                        bytes?: Uint8Array | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                    } & { [K_11 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                                } & { [K_12 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                            } & { [K_13 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                        } & { [K_14 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["createInbox"], keyof import("../../associations/association.pb").CreateInbox>]: never; }) | undefined;
                        add?: ({
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            newMemberIdentifier?: ({
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } & {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } & { [K_15 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberIdentifier"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                            existingMemberSignature?: ({
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                erc191?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_16 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                                erc6492?: ({
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } & {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | (Long & {
                                        high: number;
                                        low: number;
                                        unsigned: boolean;
                                        add: (addend: string | number | Long) => Long;
                                        and: (other: string | number | Long) => Long;
                                        compare: (other: string | number | Long) => number;
                                        comp: (other: string | number | Long) => number;
                                        divide: (divisor: string | number | Long) => Long;
                                        div: (divisor: string | number | Long) => Long;
                                        equals: (other: string | number | Long) => boolean;
                                        eq: (other: string | number | Long) => boolean;
                                        getHighBits: () => number;
                                        getHighBitsUnsigned: () => number;
                                        getLowBits: () => number;
                                        getLowBitsUnsigned: () => number;
                                        getNumBitsAbs: () => number;
                                        greaterThan: (other: string | number | Long) => boolean;
                                        gt: (other: string | number | Long) => boolean;
                                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                                        gte: (other: string | number | Long) => boolean;
                                        ge: (other: string | number | Long) => boolean;
                                        isEven: () => boolean;
                                        isNegative: () => boolean;
                                        isOdd: () => boolean;
                                        isPositive: () => boolean;
                                        isZero: () => boolean;
                                        eqz: () => boolean;
                                        lessThan: (other: string | number | Long) => boolean;
                                        lt: (other: string | number | Long) => boolean;
                                        lessThanOrEqual: (other: string | number | Long) => boolean;
                                        lte: (other: string | number | Long) => boolean;
                                        le: (other: string | number | Long) => boolean;
                                        modulo: (other: string | number | Long) => Long;
                                        mod: (other: string | number | Long) => Long;
                                        rem: (other: string | number | Long) => Long;
                                        multiply: (multiplier: string | number | Long) => Long;
                                        mul: (multiplier: string | number | Long) => Long;
                                        negate: () => Long;
                                        neg: () => Long;
                                        not: () => Long;
                                        countLeadingZeros: () => number;
                                        clz: () => number;
                                        countTrailingZeros: () => number;
                                        ctz: () => number;
                                        notEquals: (other: string | number | Long) => boolean;
                                        neq: (other: string | number | Long) => boolean;
                                        ne: (other: string | number | Long) => boolean;
                                        or: (other: string | number | Long) => Long;
                                        shiftLeft: (numBits: number | Long) => Long;
                                        shl: (numBits: number | Long) => Long;
                                        shiftRight: (numBits: number | Long) => Long;
                                        shr: (numBits: number | Long) => Long;
                                        shiftRightUnsigned: (numBits: number | Long) => Long;
                                        shru: (numBits: number | Long) => Long;
                                        shr_u: (numBits: number | Long) => Long;
                                        rotateLeft: (numBits: number | Long) => Long;
                                        rotl: (numBits: number | Long) => Long;
                                        rotateRight: (numBits: number | Long) => Long;
                                        rotr: (numBits: number | Long) => Long;
                                        subtract: (subtrahend: string | number | Long) => Long;
                                        sub: (subtrahend: string | number | Long) => Long;
                                        toInt: () => number;
                                        toNumber: () => number;
                                        toBytes: (le?: boolean | undefined) => number[];
                                        toBytesLE: () => number[];
                                        toBytesBE: () => number[];
                                        toSigned: () => Long;
                                        toString: (radix?: number | undefined) => string;
                                        toUnsigned: () => Long;
                                        xor: (other: string | number | Long) => Long;
                                    } & { [K_17 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                    signature?: Uint8Array | undefined;
                                } & { [K_18 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                                installationKey?: ({
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & { [K_19 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                                delegatedErc191?: ({
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } & {
                                    delegatedKey?: ({
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } & {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: ({
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } & {
                                            ecdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_20 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                            walletEcdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_21 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                        } & { [K_22 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                    } & { [K_23 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                    signature?: ({
                                        bytes?: Uint8Array | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                    } & { [K_24 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                                } & { [K_25 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                            } & { [K_26 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                            newMemberSignature?: ({
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                erc191?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_27 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                                erc6492?: ({
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } & {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | (Long & {
                                        high: number;
                                        low: number;
                                        unsigned: boolean;
                                        add: (addend: string | number | Long) => Long;
                                        and: (other: string | number | Long) => Long;
                                        compare: (other: string | number | Long) => number;
                                        comp: (other: string | number | Long) => number;
                                        divide: (divisor: string | number | Long) => Long;
                                        div: (divisor: string | number | Long) => Long;
                                        equals: (other: string | number | Long) => boolean;
                                        eq: (other: string | number | Long) => boolean;
                                        getHighBits: () => number;
                                        getHighBitsUnsigned: () => number;
                                        getLowBits: () => number;
                                        getLowBitsUnsigned: () => number;
                                        getNumBitsAbs: () => number;
                                        greaterThan: (other: string | number | Long) => boolean;
                                        gt: (other: string | number | Long) => boolean;
                                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                                        gte: (other: string | number | Long) => boolean;
                                        ge: (other: string | number | Long) => boolean;
                                        isEven: () => boolean;
                                        isNegative: () => boolean;
                                        isOdd: () => boolean;
                                        isPositive: () => boolean;
                                        isZero: () => boolean;
                                        eqz: () => boolean;
                                        lessThan: (other: string | number | Long) => boolean;
                                        lt: (other: string | number | Long) => boolean;
                                        lessThanOrEqual: (other: string | number | Long) => boolean;
                                        lte: (other: string | number | Long) => boolean;
                                        le: (other: string | number | Long) => boolean;
                                        modulo: (other: string | number | Long) => Long;
                                        mod: (other: string | number | Long) => Long;
                                        rem: (other: string | number | Long) => Long;
                                        multiply: (multiplier: string | number | Long) => Long;
                                        mul: (multiplier: string | number | Long) => Long;
                                        negate: () => Long;
                                        neg: () => Long;
                                        not: () => Long;
                                        countLeadingZeros: () => number;
                                        clz: () => number;
                                        countTrailingZeros: () => number;
                                        ctz: () => number;
                                        notEquals: (other: string | number | Long) => boolean;
                                        neq: (other: string | number | Long) => boolean;
                                        ne: (other: string | number | Long) => boolean;
                                        or: (other: string | number | Long) => Long;
                                        shiftLeft: (numBits: number | Long) => Long;
                                        shl: (numBits: number | Long) => Long;
                                        shiftRight: (numBits: number | Long) => Long;
                                        shr: (numBits: number | Long) => Long;
                                        shiftRightUnsigned: (numBits: number | Long) => Long;
                                        shru: (numBits: number | Long) => Long;
                                        shr_u: (numBits: number | Long) => Long;
                                        rotateLeft: (numBits: number | Long) => Long;
                                        rotl: (numBits: number | Long) => Long;
                                        rotateRight: (numBits: number | Long) => Long;
                                        rotr: (numBits: number | Long) => Long;
                                        subtract: (subtrahend: string | number | Long) => Long;
                                        sub: (subtrahend: string | number | Long) => Long;
                                        toInt: () => number;
                                        toNumber: () => number;
                                        toBytes: (le?: boolean | undefined) => number[];
                                        toBytesLE: () => number[];
                                        toBytesBE: () => number[];
                                        toSigned: () => Long;
                                        toString: (radix?: number | undefined) => string;
                                        toUnsigned: () => Long;
                                        xor: (other: string | number | Long) => Long;
                                    } & { [K_28 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                    signature?: Uint8Array | undefined;
                                } & { [K_29 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                                installationKey?: ({
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & { [K_30 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                                delegatedErc191?: ({
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } & {
                                    delegatedKey?: ({
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } & {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: ({
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } & {
                                            ecdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_31 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                            walletEcdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_32 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                        } & { [K_33 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                    } & { [K_34 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                    signature?: ({
                                        bytes?: Uint8Array | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                    } & { [K_35 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                                } & { [K_36 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                            } & { [K_37 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                        } & { [K_38 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["add"], keyof import("../../associations/association.pb").AddAssociation>]: never; }) | undefined;
                        revoke?: ({
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            memberToRevoke?: ({
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } & {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } & { [K_39 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["memberToRevoke"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                            recoveryAddressSignature?: ({
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                erc191?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_40 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                                erc6492?: ({
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } & {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | (Long & {
                                        high: number;
                                        low: number;
                                        unsigned: boolean;
                                        add: (addend: string | number | Long) => Long;
                                        and: (other: string | number | Long) => Long;
                                        compare: (other: string | number | Long) => number;
                                        comp: (other: string | number | Long) => number;
                                        divide: (divisor: string | number | Long) => Long;
                                        div: (divisor: string | number | Long) => Long;
                                        equals: (other: string | number | Long) => boolean;
                                        eq: (other: string | number | Long) => boolean;
                                        getHighBits: () => number;
                                        getHighBitsUnsigned: () => number;
                                        getLowBits: () => number;
                                        getLowBitsUnsigned: () => number;
                                        getNumBitsAbs: () => number;
                                        greaterThan: (other: string | number | Long) => boolean;
                                        gt: (other: string | number | Long) => boolean;
                                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                                        gte: (other: string | number | Long) => boolean;
                                        ge: (other: string | number | Long) => boolean;
                                        isEven: () => boolean;
                                        isNegative: () => boolean;
                                        isOdd: () => boolean;
                                        isPositive: () => boolean;
                                        isZero: () => boolean;
                                        eqz: () => boolean;
                                        lessThan: (other: string | number | Long) => boolean;
                                        lt: (other: string | number | Long) => boolean;
                                        lessThanOrEqual: (other: string | number | Long) => boolean;
                                        lte: (other: string | number | Long) => boolean;
                                        le: (other: string | number | Long) => boolean;
                                        modulo: (other: string | number | Long) => Long;
                                        mod: (other: string | number | Long) => Long;
                                        rem: (other: string | number | Long) => Long;
                                        multiply: (multiplier: string | number | Long) => Long;
                                        mul: (multiplier: string | number | Long) => Long;
                                        negate: () => Long;
                                        neg: () => Long;
                                        not: () => Long;
                                        countLeadingZeros: () => number;
                                        clz: () => number;
                                        countTrailingZeros: () => number;
                                        ctz: () => number;
                                        notEquals: (other: string | number | Long) => boolean;
                                        neq: (other: string | number | Long) => boolean;
                                        ne: (other: string | number | Long) => boolean;
                                        or: (other: string | number | Long) => Long;
                                        shiftLeft: (numBits: number | Long) => Long;
                                        shl: (numBits: number | Long) => Long;
                                        shiftRight: (numBits: number | Long) => Long;
                                        shr: (numBits: number | Long) => Long;
                                        shiftRightUnsigned: (numBits: number | Long) => Long;
                                        shru: (numBits: number | Long) => Long;
                                        shr_u: (numBits: number | Long) => Long;
                                        rotateLeft: (numBits: number | Long) => Long;
                                        rotl: (numBits: number | Long) => Long;
                                        rotateRight: (numBits: number | Long) => Long;
                                        rotr: (numBits: number | Long) => Long;
                                        subtract: (subtrahend: string | number | Long) => Long;
                                        sub: (subtrahend: string | number | Long) => Long;
                                        toInt: () => number;
                                        toNumber: () => number;
                                        toBytes: (le?: boolean | undefined) => number[];
                                        toBytesLE: () => number[];
                                        toBytesBE: () => number[];
                                        toSigned: () => Long;
                                        toString: (radix?: number | undefined) => string;
                                        toUnsigned: () => Long;
                                        xor: (other: string | number | Long) => Long;
                                    } & { [K_41 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                    signature?: Uint8Array | undefined;
                                } & { [K_42 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                                installationKey?: ({
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & { [K_43 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                                delegatedErc191?: ({
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } & {
                                    delegatedKey?: ({
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } & {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: ({
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } & {
                                            ecdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_44 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                            walletEcdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_45 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                        } & { [K_46 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                    } & { [K_47 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                    signature?: ({
                                        bytes?: Uint8Array | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                    } & { [K_48 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                                } & { [K_49 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                            } & { [K_50 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                        } & { [K_51 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["revoke"], keyof import("../../associations/association.pb").RevokeAssociation>]: never; }) | undefined;
                        changeRecoveryAddress?: ({
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: ({
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                erc191?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_52 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                                erc6492?: ({
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } & {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | (Long & {
                                        high: number;
                                        low: number;
                                        unsigned: boolean;
                                        add: (addend: string | number | Long) => Long;
                                        and: (other: string | number | Long) => Long;
                                        compare: (other: string | number | Long) => number;
                                        comp: (other: string | number | Long) => number;
                                        divide: (divisor: string | number | Long) => Long;
                                        div: (divisor: string | number | Long) => Long;
                                        equals: (other: string | number | Long) => boolean;
                                        eq: (other: string | number | Long) => boolean;
                                        getHighBits: () => number;
                                        getHighBitsUnsigned: () => number;
                                        getLowBits: () => number;
                                        getLowBitsUnsigned: () => number;
                                        getNumBitsAbs: () => number;
                                        greaterThan: (other: string | number | Long) => boolean;
                                        gt: (other: string | number | Long) => boolean;
                                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                                        gte: (other: string | number | Long) => boolean;
                                        ge: (other: string | number | Long) => boolean;
                                        isEven: () => boolean;
                                        isNegative: () => boolean;
                                        isOdd: () => boolean;
                                        isPositive: () => boolean;
                                        isZero: () => boolean;
                                        eqz: () => boolean;
                                        lessThan: (other: string | number | Long) => boolean;
                                        lt: (other: string | number | Long) => boolean;
                                        lessThanOrEqual: (other: string | number | Long) => boolean;
                                        lte: (other: string | number | Long) => boolean;
                                        le: (other: string | number | Long) => boolean;
                                        modulo: (other: string | number | Long) => Long;
                                        mod: (other: string | number | Long) => Long;
                                        rem: (other: string | number | Long) => Long;
                                        multiply: (multiplier: string | number | Long) => Long;
                                        mul: (multiplier: string | number | Long) => Long;
                                        negate: () => Long;
                                        neg: () => Long;
                                        not: () => Long;
                                        countLeadingZeros: () => number;
                                        clz: () => number;
                                        countTrailingZeros: () => number;
                                        ctz: () => number;
                                        notEquals: (other: string | number | Long) => boolean;
                                        neq: (other: string | number | Long) => boolean;
                                        ne: (other: string | number | Long) => boolean;
                                        or: (other: string | number | Long) => Long;
                                        shiftLeft: (numBits: number | Long) => Long;
                                        shl: (numBits: number | Long) => Long;
                                        shiftRight: (numBits: number | Long) => Long;
                                        shr: (numBits: number | Long) => Long;
                                        shiftRightUnsigned: (numBits: number | Long) => Long;
                                        shru: (numBits: number | Long) => Long;
                                        shr_u: (numBits: number | Long) => Long;
                                        rotateLeft: (numBits: number | Long) => Long;
                                        rotl: (numBits: number | Long) => Long;
                                        rotateRight: (numBits: number | Long) => Long;
                                        rotr: (numBits: number | Long) => Long;
                                        subtract: (subtrahend: string | number | Long) => Long;
                                        sub: (subtrahend: string | number | Long) => Long;
                                        toInt: () => number;
                                        toNumber: () => number;
                                        toBytes: (le?: boolean | undefined) => number[];
                                        toBytesLE: () => number[];
                                        toBytesBE: () => number[];
                                        toSigned: () => Long;
                                        toString: (radix?: number | undefined) => string;
                                        toUnsigned: () => Long;
                                        xor: (other: string | number | Long) => Long;
                                    } & { [K_53 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                    signature?: Uint8Array | undefined;
                                } & { [K_54 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                                installationKey?: ({
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } & { [K_55 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                                delegatedErc191?: ({
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } & {
                                    delegatedKey?: ({
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } & {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: ({
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } & {
                                            ecdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_56 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                            walletEcdsaCompact?: ({
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } & { [K_57 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                        } & { [K_58 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                    } & { [K_59 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                    signature?: ({
                                        bytes?: Uint8Array | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                    } & { [K_60 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                                } & { [K_61 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                            } & { [K_62 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                        } & { [K_63 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"], keyof import("../../associations/association.pb").ChangeRecoveryAddress>]: never; }) | undefined;
                    } & { [K_64 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"][number], keyof import("../../associations/association.pb").IdentityAction>]: never; })[] & { [K_65 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["actions"], keyof {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[]>]: never; }) | undefined;
                    clientTimestampNs?: string | number | (Long & {
                        high: number;
                        low: number;
                        unsigned: boolean;
                        add: (addend: string | number | Long) => Long;
                        and: (other: string | number | Long) => Long;
                        compare: (other: string | number | Long) => number;
                        comp: (other: string | number | Long) => number;
                        divide: (divisor: string | number | Long) => Long;
                        div: (divisor: string | number | Long) => Long;
                        equals: (other: string | number | Long) => boolean;
                        eq: (other: string | number | Long) => boolean;
                        getHighBits: () => number;
                        getHighBitsUnsigned: () => number;
                        getLowBits: () => number;
                        getLowBitsUnsigned: () => number;
                        getNumBitsAbs: () => number;
                        greaterThan: (other: string | number | Long) => boolean;
                        gt: (other: string | number | Long) => boolean;
                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                        gte: (other: string | number | Long) => boolean;
                        ge: (other: string | number | Long) => boolean;
                        isEven: () => boolean;
                        isNegative: () => boolean;
                        isOdd: () => boolean;
                        isPositive: () => boolean;
                        isZero: () => boolean;
                        eqz: () => boolean;
                        lessThan: (other: string | number | Long) => boolean;
                        lt: (other: string | number | Long) => boolean;
                        lessThanOrEqual: (other: string | number | Long) => boolean;
                        lte: (other: string | number | Long) => boolean;
                        le: (other: string | number | Long) => boolean;
                        modulo: (other: string | number | Long) => Long;
                        mod: (other: string | number | Long) => Long;
                        rem: (other: string | number | Long) => Long;
                        multiply: (multiplier: string | number | Long) => Long;
                        mul: (multiplier: string | number | Long) => Long;
                        negate: () => Long;
                        neg: () => Long;
                        not: () => Long;
                        countLeadingZeros: () => number;
                        clz: () => number;
                        countTrailingZeros: () => number;
                        ctz: () => number;
                        notEquals: (other: string | number | Long) => boolean;
                        neq: (other: string | number | Long) => boolean;
                        ne: (other: string | number | Long) => boolean;
                        or: (other: string | number | Long) => Long;
                        shiftLeft: (numBits: number | Long) => Long;
                        shl: (numBits: number | Long) => Long;
                        shiftRight: (numBits: number | Long) => Long;
                        shr: (numBits: number | Long) => Long;
                        shiftRightUnsigned: (numBits: number | Long) => Long;
                        shru: (numBits: number | Long) => Long;
                        shr_u: (numBits: number | Long) => Long;
                        rotateLeft: (numBits: number | Long) => Long;
                        rotl: (numBits: number | Long) => Long;
                        rotateRight: (numBits: number | Long) => Long;
                        rotr: (numBits: number | Long) => Long;
                        subtract: (subtrahend: string | number | Long) => Long;
                        sub: (subtrahend: string | number | Long) => Long;
                        toInt: () => number;
                        toNumber: () => number;
                        toBytes: (le?: boolean | undefined) => number[];
                        toBytesLE: () => number[];
                        toBytesBE: () => number[];
                        toSigned: () => Long;
                        toString: (radix?: number | undefined) => string;
                        toUnsigned: () => Long;
                        xor: (other: string | number | Long) => Long;
                    } & { [K_66 in Exclude<keyof I["responses"][number]["updates"][number]["update"]["clientTimestampNs"], keyof Long>]: never; }) | undefined;
                    inboxId?: string | undefined;
                } & { [K_67 in Exclude<keyof I["responses"][number]["updates"][number]["update"], keyof IdentityUpdate>]: never; }) | undefined;
            } & { [K_68 in Exclude<keyof I["responses"][number]["updates"][number], keyof GetIdentityUpdatesResponse_IdentityUpdateLog>]: never; })[] & { [K_69 in Exclude<keyof I["responses"][number]["updates"], keyof {
                sequenceId?: string | number | Long | undefined;
                serverTimestampNs?: string | number | Long | undefined;
                update?: {
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
        } & { [K_70 in Exclude<keyof I["responses"][number], keyof GetIdentityUpdatesResponse_Response>]: never; })[] & { [K_71 in Exclude<keyof I["responses"], keyof {
            inboxId?: string | undefined;
            updates?: {
                sequenceId?: string | number | Long | undefined;
                serverTimestampNs?: string | number | Long | undefined;
                update?: {
                    actions?: {
                        createInbox?: {
                            initialAddress?: string | undefined;
                            nonce?: string | number | Long | undefined;
                            initialAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        add?: {
                            newMemberIdentifier?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            existingMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            newMemberSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        revoke?: {
                            memberToRevoke?: {
                                address?: string | undefined;
                                installationPublicKey?: Uint8Array | undefined;
                            } | undefined;
                            recoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        changeRecoveryAddress?: {
                            newRecoveryAddress?: string | undefined;
                            existingRecoveryAddressSignature?: {
                                erc191?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                                erc6492?: {
                                    accountId?: string | undefined;
                                    blockNumber?: string | number | Long | undefined;
                                    signature?: Uint8Array | undefined;
                                } | undefined;
                                installationKey?: {
                                    bytes?: Uint8Array | undefined;
                                    publicKey?: Uint8Array | undefined;
                                } | undefined;
                                delegatedErc191?: {
                                    delegatedKey?: {
                                        keyBytes?: Uint8Array | undefined;
                                        signature?: {
                                            ecdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                            walletEcdsaCompact?: {
                                                bytes?: Uint8Array | undefined;
                                                recovery?: number | undefined;
                                            } | undefined;
                                        } | undefined;
                                    } | undefined;
                                    signature?: {
                                        bytes?: Uint8Array | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    }[] | undefined;
                    clientTimestampNs?: string | number | Long | undefined;
                    inboxId?: string | undefined;
                } | undefined;
            }[] | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_72 in Exclude<keyof I, "responses">]: never; }>(object: I): GetIdentityUpdatesResponse;
};
export declare const GetIdentityUpdatesResponse_IdentityUpdateLog: {
    encode(message: GetIdentityUpdatesResponse_IdentityUpdateLog, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetIdentityUpdatesResponse_IdentityUpdateLog;
    fromJSON(object: any): GetIdentityUpdatesResponse_IdentityUpdateLog;
    toJSON(message: GetIdentityUpdatesResponse_IdentityUpdateLog): unknown;
    fromPartial<I extends {
        sequenceId?: string | number | Long | undefined;
        serverTimestampNs?: string | number | Long | undefined;
        update?: {
            actions?: {
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[] | undefined;
            clientTimestampNs?: string | number | Long | undefined;
            inboxId?: string | undefined;
        } | undefined;
    } & {
        sequenceId?: string | number | (Long & {
            high: number;
            low: number;
            unsigned: boolean;
            add: (addend: string | number | Long) => Long;
            and: (other: string | number | Long) => Long;
            compare: (other: string | number | Long) => number;
            comp: (other: string | number | Long) => number;
            divide: (divisor: string | number | Long) => Long;
            div: (divisor: string | number | Long) => Long;
            equals: (other: string | number | Long) => boolean;
            eq: (other: string | number | Long) => boolean;
            getHighBits: () => number;
            getHighBitsUnsigned: () => number;
            getLowBits: () => number;
            getLowBitsUnsigned: () => number;
            getNumBitsAbs: () => number;
            greaterThan: (other: string | number | Long) => boolean;
            gt: (other: string | number | Long) => boolean;
            greaterThanOrEqual: (other: string | number | Long) => boolean;
            gte: (other: string | number | Long) => boolean;
            ge: (other: string | number | Long) => boolean;
            isEven: () => boolean;
            isNegative: () => boolean;
            isOdd: () => boolean;
            isPositive: () => boolean;
            isZero: () => boolean;
            eqz: () => boolean;
            lessThan: (other: string | number | Long) => boolean;
            lt: (other: string | number | Long) => boolean;
            lessThanOrEqual: (other: string | number | Long) => boolean;
            lte: (other: string | number | Long) => boolean;
            le: (other: string | number | Long) => boolean;
            modulo: (other: string | number | Long) => Long;
            mod: (other: string | number | Long) => Long;
            rem: (other: string | number | Long) => Long;
            multiply: (multiplier: string | number | Long) => Long;
            mul: (multiplier: string | number | Long) => Long;
            negate: () => Long;
            neg: () => Long;
            not: () => Long;
            countLeadingZeros: () => number;
            clz: () => number;
            countTrailingZeros: () => number;
            ctz: () => number;
            notEquals: (other: string | number | Long) => boolean;
            neq: (other: string | number | Long) => boolean;
            ne: (other: string | number | Long) => boolean;
            or: (other: string | number | Long) => Long;
            shiftLeft: (numBits: number | Long) => Long;
            shl: (numBits: number | Long) => Long;
            shiftRight: (numBits: number | Long) => Long;
            shr: (numBits: number | Long) => Long;
            shiftRightUnsigned: (numBits: number | Long) => Long;
            shru: (numBits: number | Long) => Long;
            shr_u: (numBits: number | Long) => Long;
            rotateLeft: (numBits: number | Long) => Long;
            rotl: (numBits: number | Long) => Long;
            rotateRight: (numBits: number | Long) => Long;
            rotr: (numBits: number | Long) => Long;
            subtract: (subtrahend: string | number | Long) => Long;
            sub: (subtrahend: string | number | Long) => Long;
            toInt: () => number;
            toNumber: () => number;
            toBytes: (le?: boolean | undefined) => number[];
            toBytesLE: () => number[];
            toBytesBE: () => number[];
            toSigned: () => Long;
            toString: (radix?: number | undefined) => string;
            toUnsigned: () => Long;
            xor: (other: string | number | Long) => Long;
        } & { [K in Exclude<keyof I["sequenceId"], keyof Long>]: never; }) | undefined;
        serverTimestampNs?: string | number | (Long & {
            high: number;
            low: number;
            unsigned: boolean;
            add: (addend: string | number | Long) => Long;
            and: (other: string | number | Long) => Long;
            compare: (other: string | number | Long) => number;
            comp: (other: string | number | Long) => number;
            divide: (divisor: string | number | Long) => Long;
            div: (divisor: string | number | Long) => Long;
            equals: (other: string | number | Long) => boolean;
            eq: (other: string | number | Long) => boolean;
            getHighBits: () => number;
            getHighBitsUnsigned: () => number;
            getLowBits: () => number;
            getLowBitsUnsigned: () => number;
            getNumBitsAbs: () => number;
            greaterThan: (other: string | number | Long) => boolean;
            gt: (other: string | number | Long) => boolean;
            greaterThanOrEqual: (other: string | number | Long) => boolean;
            gte: (other: string | number | Long) => boolean;
            ge: (other: string | number | Long) => boolean;
            isEven: () => boolean;
            isNegative: () => boolean;
            isOdd: () => boolean;
            isPositive: () => boolean;
            isZero: () => boolean;
            eqz: () => boolean;
            lessThan: (other: string | number | Long) => boolean;
            lt: (other: string | number | Long) => boolean;
            lessThanOrEqual: (other: string | number | Long) => boolean;
            lte: (other: string | number | Long) => boolean;
            le: (other: string | number | Long) => boolean;
            modulo: (other: string | number | Long) => Long;
            mod: (other: string | number | Long) => Long;
            rem: (other: string | number | Long) => Long;
            multiply: (multiplier: string | number | Long) => Long;
            mul: (multiplier: string | number | Long) => Long;
            negate: () => Long;
            neg: () => Long;
            not: () => Long;
            countLeadingZeros: () => number;
            clz: () => number;
            countTrailingZeros: () => number;
            ctz: () => number;
            notEquals: (other: string | number | Long) => boolean;
            neq: (other: string | number | Long) => boolean;
            ne: (other: string | number | Long) => boolean;
            or: (other: string | number | Long) => Long;
            shiftLeft: (numBits: number | Long) => Long;
            shl: (numBits: number | Long) => Long;
            shiftRight: (numBits: number | Long) => Long;
            shr: (numBits: number | Long) => Long;
            shiftRightUnsigned: (numBits: number | Long) => Long;
            shru: (numBits: number | Long) => Long;
            shr_u: (numBits: number | Long) => Long;
            rotateLeft: (numBits: number | Long) => Long;
            rotl: (numBits: number | Long) => Long;
            rotateRight: (numBits: number | Long) => Long;
            rotr: (numBits: number | Long) => Long;
            subtract: (subtrahend: string | number | Long) => Long;
            sub: (subtrahend: string | number | Long) => Long;
            toInt: () => number;
            toNumber: () => number;
            toBytes: (le?: boolean | undefined) => number[];
            toBytesLE: () => number[];
            toBytesBE: () => number[];
            toSigned: () => Long;
            toString: (radix?: number | undefined) => string;
            toUnsigned: () => Long;
            xor: (other: string | number | Long) => Long;
        } & { [K_1 in Exclude<keyof I["serverTimestampNs"], keyof Long>]: never; }) | undefined;
        update?: ({
            actions?: {
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[] | undefined;
            clientTimestampNs?: string | number | Long | undefined;
            inboxId?: string | undefined;
        } & {
            actions?: ({
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[] & ({
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            } & {
                createInbox?: ({
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    initialAddress?: string | undefined;
                    nonce?: string | number | (Long & {
                        high: number;
                        low: number;
                        unsigned: boolean;
                        add: (addend: string | number | Long) => Long;
                        and: (other: string | number | Long) => Long;
                        compare: (other: string | number | Long) => number;
                        comp: (other: string | number | Long) => number;
                        divide: (divisor: string | number | Long) => Long;
                        div: (divisor: string | number | Long) => Long;
                        equals: (other: string | number | Long) => boolean;
                        eq: (other: string | number | Long) => boolean;
                        getHighBits: () => number;
                        getHighBitsUnsigned: () => number;
                        getLowBits: () => number;
                        getLowBitsUnsigned: () => number;
                        getNumBitsAbs: () => number;
                        greaterThan: (other: string | number | Long) => boolean;
                        gt: (other: string | number | Long) => boolean;
                        greaterThanOrEqual: (other: string | number | Long) => boolean;
                        gte: (other: string | number | Long) => boolean;
                        ge: (other: string | number | Long) => boolean;
                        isEven: () => boolean;
                        isNegative: () => boolean;
                        isOdd: () => boolean;
                        isPositive: () => boolean;
                        isZero: () => boolean;
                        eqz: () => boolean;
                        lessThan: (other: string | number | Long) => boolean;
                        lt: (other: string | number | Long) => boolean;
                        lessThanOrEqual: (other: string | number | Long) => boolean;
                        lte: (other: string | number | Long) => boolean;
                        le: (other: string | number | Long) => boolean;
                        modulo: (other: string | number | Long) => Long;
                        mod: (other: string | number | Long) => Long;
                        rem: (other: string | number | Long) => Long;
                        multiply: (multiplier: string | number | Long) => Long;
                        mul: (multiplier: string | number | Long) => Long;
                        negate: () => Long;
                        neg: () => Long;
                        not: () => Long;
                        countLeadingZeros: () => number;
                        clz: () => number;
                        countTrailingZeros: () => number;
                        ctz: () => number;
                        notEquals: (other: string | number | Long) => boolean;
                        neq: (other: string | number | Long) => boolean;
                        ne: (other: string | number | Long) => boolean;
                        or: (other: string | number | Long) => Long;
                        shiftLeft: (numBits: number | Long) => Long;
                        shl: (numBits: number | Long) => Long;
                        shiftRight: (numBits: number | Long) => Long;
                        shr: (numBits: number | Long) => Long;
                        shiftRightUnsigned: (numBits: number | Long) => Long;
                        shru: (numBits: number | Long) => Long;
                        shr_u: (numBits: number | Long) => Long;
                        rotateLeft: (numBits: number | Long) => Long;
                        rotl: (numBits: number | Long) => Long;
                        rotateRight: (numBits: number | Long) => Long;
                        rotr: (numBits: number | Long) => Long;
                        subtract: (subtrahend: string | number | Long) => Long;
                        sub: (subtrahend: string | number | Long) => Long;
                        toInt: () => number;
                        toNumber: () => number;
                        toBytes: (le?: boolean | undefined) => number[];
                        toBytesLE: () => number[];
                        toBytesBE: () => number[];
                        toSigned: () => Long;
                        toString: (radix?: number | undefined) => string;
                        toUnsigned: () => Long;
                        xor: (other: string | number | Long) => Long;
                    } & { [K_2 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["nonce"], keyof Long>]: never; }) | undefined;
                    initialAddressSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_3 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_4 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_5 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_6 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_7 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_8 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_9 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_10 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_11 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_12 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_13 in Exclude<keyof I["update"]["actions"][number]["createInbox"]["initialAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_14 in Exclude<keyof I["update"]["actions"][number]["createInbox"], keyof import("../../associations/association.pb").CreateInbox>]: never; }) | undefined;
                add?: ({
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    newMemberIdentifier?: ({
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & { [K_15 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberIdentifier"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                    existingMemberSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_16 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_17 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_18 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_19 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_20 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_21 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_22 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_23 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_24 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_25 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_26 in Exclude<keyof I["update"]["actions"][number]["add"]["existingMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                    newMemberSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_27 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_28 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_29 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_30 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_31 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_32 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_33 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_34 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_35 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_36 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_37 in Exclude<keyof I["update"]["actions"][number]["add"]["newMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_38 in Exclude<keyof I["update"]["actions"][number]["add"], keyof import("../../associations/association.pb").AddAssociation>]: never; }) | undefined;
                revoke?: ({
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    memberToRevoke?: ({
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } & { [K_39 in Exclude<keyof I["update"]["actions"][number]["revoke"]["memberToRevoke"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                    recoveryAddressSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_40 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_41 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_42 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_43 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_44 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_45 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_46 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_47 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_48 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_49 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_50 in Exclude<keyof I["update"]["actions"][number]["revoke"]["recoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_51 in Exclude<keyof I["update"]["actions"][number]["revoke"], keyof import("../../associations/association.pb").RevokeAssociation>]: never; }) | undefined;
                changeRecoveryAddress?: ({
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: ({
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        erc191?: ({
                            bytes?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                        } & { [K_52 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                        erc6492?: ({
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } & {
                            accountId?: string | undefined;
                            blockNumber?: string | number | (Long & {
                                high: number;
                                low: number;
                                unsigned: boolean;
                                add: (addend: string | number | Long) => Long;
                                and: (other: string | number | Long) => Long;
                                compare: (other: string | number | Long) => number;
                                comp: (other: string | number | Long) => number;
                                divide: (divisor: string | number | Long) => Long;
                                div: (divisor: string | number | Long) => Long;
                                equals: (other: string | number | Long) => boolean;
                                eq: (other: string | number | Long) => boolean;
                                getHighBits: () => number;
                                getHighBitsUnsigned: () => number;
                                getLowBits: () => number;
                                getLowBitsUnsigned: () => number;
                                getNumBitsAbs: () => number;
                                greaterThan: (other: string | number | Long) => boolean;
                                gt: (other: string | number | Long) => boolean;
                                greaterThanOrEqual: (other: string | number | Long) => boolean;
                                gte: (other: string | number | Long) => boolean;
                                ge: (other: string | number | Long) => boolean;
                                isEven: () => boolean;
                                isNegative: () => boolean;
                                isOdd: () => boolean;
                                isPositive: () => boolean;
                                isZero: () => boolean;
                                eqz: () => boolean;
                                lessThan: (other: string | number | Long) => boolean;
                                lt: (other: string | number | Long) => boolean;
                                lessThanOrEqual: (other: string | number | Long) => boolean;
                                lte: (other: string | number | Long) => boolean;
                                le: (other: string | number | Long) => boolean;
                                modulo: (other: string | number | Long) => Long;
                                mod: (other: string | number | Long) => Long;
                                rem: (other: string | number | Long) => Long;
                                multiply: (multiplier: string | number | Long) => Long;
                                mul: (multiplier: string | number | Long) => Long;
                                negate: () => Long;
                                neg: () => Long;
                                not: () => Long;
                                countLeadingZeros: () => number;
                                clz: () => number;
                                countTrailingZeros: () => number;
                                ctz: () => number;
                                notEquals: (other: string | number | Long) => boolean;
                                neq: (other: string | number | Long) => boolean;
                                ne: (other: string | number | Long) => boolean;
                                or: (other: string | number | Long) => Long;
                                shiftLeft: (numBits: number | Long) => Long;
                                shl: (numBits: number | Long) => Long;
                                shiftRight: (numBits: number | Long) => Long;
                                shr: (numBits: number | Long) => Long;
                                shiftRightUnsigned: (numBits: number | Long) => Long;
                                shru: (numBits: number | Long) => Long;
                                shr_u: (numBits: number | Long) => Long;
                                rotateLeft: (numBits: number | Long) => Long;
                                rotl: (numBits: number | Long) => Long;
                                rotateRight: (numBits: number | Long) => Long;
                                rotr: (numBits: number | Long) => Long;
                                subtract: (subtrahend: string | number | Long) => Long;
                                sub: (subtrahend: string | number | Long) => Long;
                                toInt: () => number;
                                toNumber: () => number;
                                toBytes: (le?: boolean | undefined) => number[];
                                toBytesLE: () => number[];
                                toBytesBE: () => number[];
                                toSigned: () => Long;
                                toString: (radix?: number | undefined) => string;
                                toUnsigned: () => Long;
                                xor: (other: string | number | Long) => Long;
                            } & { [K_53 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                            signature?: Uint8Array | undefined;
                        } & { [K_54 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                        installationKey?: ({
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } & { [K_55 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                        delegatedErc191?: ({
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } & {
                            delegatedKey?: ({
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } & {
                                keyBytes?: Uint8Array | undefined;
                                signature?: ({
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } & {
                                    ecdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_56 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                    walletEcdsaCompact?: ({
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } & { [K_57 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                } & { [K_58 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                            } & { [K_59 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                            signature?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_60 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                        } & { [K_61 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                    } & { [K_62 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                } & { [K_63 in Exclude<keyof I["update"]["actions"][number]["changeRecoveryAddress"], keyof import("../../associations/association.pb").ChangeRecoveryAddress>]: never; }) | undefined;
            } & { [K_64 in Exclude<keyof I["update"]["actions"][number], keyof import("../../associations/association.pb").IdentityAction>]: never; })[] & { [K_65 in Exclude<keyof I["update"]["actions"], keyof {
                createInbox?: {
                    initialAddress?: string | undefined;
                    nonce?: string | number | Long | undefined;
                    initialAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                add?: {
                    newMemberIdentifier?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    existingMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    newMemberSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                revoke?: {
                    memberToRevoke?: {
                        address?: string | undefined;
                        installationPublicKey?: Uint8Array | undefined;
                    } | undefined;
                    recoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
                changeRecoveryAddress?: {
                    newRecoveryAddress?: string | undefined;
                    existingRecoveryAddressSignature?: {
                        erc191?: {
                            bytes?: Uint8Array | undefined;
                        } | undefined;
                        erc6492?: {
                            accountId?: string | undefined;
                            blockNumber?: string | number | Long | undefined;
                            signature?: Uint8Array | undefined;
                        } | undefined;
                        installationKey?: {
                            bytes?: Uint8Array | undefined;
                            publicKey?: Uint8Array | undefined;
                        } | undefined;
                        delegatedErc191?: {
                            delegatedKey?: {
                                keyBytes?: Uint8Array | undefined;
                                signature?: {
                                    ecdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                    walletEcdsaCompact?: {
                                        bytes?: Uint8Array | undefined;
                                        recovery?: number | undefined;
                                    } | undefined;
                                } | undefined;
                            } | undefined;
                            signature?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } | undefined;
            }[]>]: never; }) | undefined;
            clientTimestampNs?: string | number | (Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | Long) => Long;
                and: (other: string | number | Long) => Long;
                compare: (other: string | number | Long) => number;
                comp: (other: string | number | Long) => number;
                divide: (divisor: string | number | Long) => Long;
                div: (divisor: string | number | Long) => Long;
                equals: (other: string | number | Long) => boolean;
                eq: (other: string | number | Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | Long) => boolean;
                gt: (other: string | number | Long) => boolean;
                greaterThanOrEqual: (other: string | number | Long) => boolean;
                gte: (other: string | number | Long) => boolean;
                ge: (other: string | number | Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                eqz: () => boolean;
                lessThan: (other: string | number | Long) => boolean;
                lt: (other: string | number | Long) => boolean;
                lessThanOrEqual: (other: string | number | Long) => boolean;
                lte: (other: string | number | Long) => boolean;
                le: (other: string | number | Long) => boolean;
                modulo: (other: string | number | Long) => Long;
                mod: (other: string | number | Long) => Long;
                rem: (other: string | number | Long) => Long;
                multiply: (multiplier: string | number | Long) => Long;
                mul: (multiplier: string | number | Long) => Long;
                negate: () => Long;
                neg: () => Long;
                not: () => Long;
                countLeadingZeros: () => number;
                clz: () => number;
                countTrailingZeros: () => number;
                ctz: () => number;
                notEquals: (other: string | number | Long) => boolean;
                neq: (other: string | number | Long) => boolean;
                ne: (other: string | number | Long) => boolean;
                or: (other: string | number | Long) => Long;
                shiftLeft: (numBits: number | Long) => Long;
                shl: (numBits: number | Long) => Long;
                shiftRight: (numBits: number | Long) => Long;
                shr: (numBits: number | Long) => Long;
                shiftRightUnsigned: (numBits: number | Long) => Long;
                shru: (numBits: number | Long) => Long;
                shr_u: (numBits: number | Long) => Long;
                rotateLeft: (numBits: number | Long) => Long;
                rotl: (numBits: number | Long) => Long;
                rotateRight: (numBits: number | Long) => Long;
                rotr: (numBits: number | Long) => Long;
                subtract: (subtrahend: string | number | Long) => Long;
                sub: (subtrahend: string | number | Long) => Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean | undefined) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => Long;
                toString: (radix?: number | undefined) => string;
                toUnsigned: () => Long;
                xor: (other: string | number | Long) => Long;
            } & { [K_66 in Exclude<keyof I["update"]["clientTimestampNs"], keyof Long>]: never; }) | undefined;
            inboxId?: string | undefined;
        } & { [K_67 in Exclude<keyof I["update"], keyof IdentityUpdate>]: never; }) | undefined;
    } & { [K_68 in Exclude<keyof I, keyof GetIdentityUpdatesResponse_IdentityUpdateLog>]: never; }>(object: I): GetIdentityUpdatesResponse_IdentityUpdateLog;
};
export declare const GetIdentityUpdatesResponse_Response: {
    encode(message: GetIdentityUpdatesResponse_Response, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetIdentityUpdatesResponse_Response;
    fromJSON(object: any): GetIdentityUpdatesResponse_Response;
    toJSON(message: GetIdentityUpdatesResponse_Response): unknown;
    fromPartial<I extends {
        inboxId?: string | undefined;
        updates?: {
            sequenceId?: string | number | Long | undefined;
            serverTimestampNs?: string | number | Long | undefined;
            update?: {
                actions?: {
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                }[] | undefined;
                clientTimestampNs?: string | number | Long | undefined;
                inboxId?: string | undefined;
            } | undefined;
        }[] | undefined;
    } & {
        inboxId?: string | undefined;
        updates?: ({
            sequenceId?: string | number | Long | undefined;
            serverTimestampNs?: string | number | Long | undefined;
            update?: {
                actions?: {
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                }[] | undefined;
                clientTimestampNs?: string | number | Long | undefined;
                inboxId?: string | undefined;
            } | undefined;
        }[] & ({
            sequenceId?: string | number | Long | undefined;
            serverTimestampNs?: string | number | Long | undefined;
            update?: {
                actions?: {
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                }[] | undefined;
                clientTimestampNs?: string | number | Long | undefined;
                inboxId?: string | undefined;
            } | undefined;
        } & {
            sequenceId?: string | number | (Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | Long) => Long;
                and: (other: string | number | Long) => Long;
                compare: (other: string | number | Long) => number;
                comp: (other: string | number | Long) => number;
                divide: (divisor: string | number | Long) => Long;
                div: (divisor: string | number | Long) => Long;
                equals: (other: string | number | Long) => boolean;
                eq: (other: string | number | Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | Long) => boolean;
                gt: (other: string | number | Long) => boolean;
                greaterThanOrEqual: (other: string | number | Long) => boolean;
                gte: (other: string | number | Long) => boolean;
                ge: (other: string | number | Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                eqz: () => boolean;
                lessThan: (other: string | number | Long) => boolean;
                lt: (other: string | number | Long) => boolean;
                lessThanOrEqual: (other: string | number | Long) => boolean;
                lte: (other: string | number | Long) => boolean;
                le: (other: string | number | Long) => boolean;
                modulo: (other: string | number | Long) => Long;
                mod: (other: string | number | Long) => Long;
                rem: (other: string | number | Long) => Long;
                multiply: (multiplier: string | number | Long) => Long;
                mul: (multiplier: string | number | Long) => Long;
                negate: () => Long;
                neg: () => Long;
                not: () => Long;
                countLeadingZeros: () => number;
                clz: () => number;
                countTrailingZeros: () => number;
                ctz: () => number;
                notEquals: (other: string | number | Long) => boolean;
                neq: (other: string | number | Long) => boolean;
                ne: (other: string | number | Long) => boolean;
                or: (other: string | number | Long) => Long;
                shiftLeft: (numBits: number | Long) => Long;
                shl: (numBits: number | Long) => Long;
                shiftRight: (numBits: number | Long) => Long;
                shr: (numBits: number | Long) => Long;
                shiftRightUnsigned: (numBits: number | Long) => Long;
                shru: (numBits: number | Long) => Long;
                shr_u: (numBits: number | Long) => Long;
                rotateLeft: (numBits: number | Long) => Long;
                rotl: (numBits: number | Long) => Long;
                rotateRight: (numBits: number | Long) => Long;
                rotr: (numBits: number | Long) => Long;
                subtract: (subtrahend: string | number | Long) => Long;
                sub: (subtrahend: string | number | Long) => Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean | undefined) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => Long;
                toString: (radix?: number | undefined) => string;
                toUnsigned: () => Long;
                xor: (other: string | number | Long) => Long;
            } & { [K in Exclude<keyof I["updates"][number]["sequenceId"], keyof Long>]: never; }) | undefined;
            serverTimestampNs?: string | number | (Long & {
                high: number;
                low: number;
                unsigned: boolean;
                add: (addend: string | number | Long) => Long;
                and: (other: string | number | Long) => Long;
                compare: (other: string | number | Long) => number;
                comp: (other: string | number | Long) => number;
                divide: (divisor: string | number | Long) => Long;
                div: (divisor: string | number | Long) => Long;
                equals: (other: string | number | Long) => boolean;
                eq: (other: string | number | Long) => boolean;
                getHighBits: () => number;
                getHighBitsUnsigned: () => number;
                getLowBits: () => number;
                getLowBitsUnsigned: () => number;
                getNumBitsAbs: () => number;
                greaterThan: (other: string | number | Long) => boolean;
                gt: (other: string | number | Long) => boolean;
                greaterThanOrEqual: (other: string | number | Long) => boolean;
                gte: (other: string | number | Long) => boolean;
                ge: (other: string | number | Long) => boolean;
                isEven: () => boolean;
                isNegative: () => boolean;
                isOdd: () => boolean;
                isPositive: () => boolean;
                isZero: () => boolean;
                eqz: () => boolean;
                lessThan: (other: string | number | Long) => boolean;
                lt: (other: string | number | Long) => boolean;
                lessThanOrEqual: (other: string | number | Long) => boolean;
                lte: (other: string | number | Long) => boolean;
                le: (other: string | number | Long) => boolean;
                modulo: (other: string | number | Long) => Long;
                mod: (other: string | number | Long) => Long;
                rem: (other: string | number | Long) => Long;
                multiply: (multiplier: string | number | Long) => Long;
                mul: (multiplier: string | number | Long) => Long;
                negate: () => Long;
                neg: () => Long;
                not: () => Long;
                countLeadingZeros: () => number;
                clz: () => number;
                countTrailingZeros: () => number;
                ctz: () => number;
                notEquals: (other: string | number | Long) => boolean;
                neq: (other: string | number | Long) => boolean;
                ne: (other: string | number | Long) => boolean;
                or: (other: string | number | Long) => Long;
                shiftLeft: (numBits: number | Long) => Long;
                shl: (numBits: number | Long) => Long;
                shiftRight: (numBits: number | Long) => Long;
                shr: (numBits: number | Long) => Long;
                shiftRightUnsigned: (numBits: number | Long) => Long;
                shru: (numBits: number | Long) => Long;
                shr_u: (numBits: number | Long) => Long;
                rotateLeft: (numBits: number | Long) => Long;
                rotl: (numBits: number | Long) => Long;
                rotateRight: (numBits: number | Long) => Long;
                rotr: (numBits: number | Long) => Long;
                subtract: (subtrahend: string | number | Long) => Long;
                sub: (subtrahend: string | number | Long) => Long;
                toInt: () => number;
                toNumber: () => number;
                toBytes: (le?: boolean | undefined) => number[];
                toBytesLE: () => number[];
                toBytesBE: () => number[];
                toSigned: () => Long;
                toString: (radix?: number | undefined) => string;
                toUnsigned: () => Long;
                xor: (other: string | number | Long) => Long;
            } & { [K_1 in Exclude<keyof I["updates"][number]["serverTimestampNs"], keyof Long>]: never; }) | undefined;
            update?: ({
                actions?: {
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                }[] | undefined;
                clientTimestampNs?: string | number | Long | undefined;
                inboxId?: string | undefined;
            } & {
                actions?: ({
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                }[] & ({
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                } & {
                    createInbox?: ({
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        initialAddress?: string | undefined;
                        nonce?: string | number | (Long & {
                            high: number;
                            low: number;
                            unsigned: boolean;
                            add: (addend: string | number | Long) => Long;
                            and: (other: string | number | Long) => Long;
                            compare: (other: string | number | Long) => number;
                            comp: (other: string | number | Long) => number;
                            divide: (divisor: string | number | Long) => Long;
                            div: (divisor: string | number | Long) => Long;
                            equals: (other: string | number | Long) => boolean;
                            eq: (other: string | number | Long) => boolean;
                            getHighBits: () => number;
                            getHighBitsUnsigned: () => number;
                            getLowBits: () => number;
                            getLowBitsUnsigned: () => number;
                            getNumBitsAbs: () => number;
                            greaterThan: (other: string | number | Long) => boolean;
                            gt: (other: string | number | Long) => boolean;
                            greaterThanOrEqual: (other: string | number | Long) => boolean;
                            gte: (other: string | number | Long) => boolean;
                            ge: (other: string | number | Long) => boolean;
                            isEven: () => boolean;
                            isNegative: () => boolean;
                            isOdd: () => boolean;
                            isPositive: () => boolean;
                            isZero: () => boolean;
                            eqz: () => boolean;
                            lessThan: (other: string | number | Long) => boolean;
                            lt: (other: string | number | Long) => boolean;
                            lessThanOrEqual: (other: string | number | Long) => boolean;
                            lte: (other: string | number | Long) => boolean;
                            le: (other: string | number | Long) => boolean;
                            modulo: (other: string | number | Long) => Long;
                            mod: (other: string | number | Long) => Long;
                            rem: (other: string | number | Long) => Long;
                            multiply: (multiplier: string | number | Long) => Long;
                            mul: (multiplier: string | number | Long) => Long;
                            negate: () => Long;
                            neg: () => Long;
                            not: () => Long;
                            countLeadingZeros: () => number;
                            clz: () => number;
                            countTrailingZeros: () => number;
                            ctz: () => number;
                            notEquals: (other: string | number | Long) => boolean;
                            neq: (other: string | number | Long) => boolean;
                            ne: (other: string | number | Long) => boolean;
                            or: (other: string | number | Long) => Long;
                            shiftLeft: (numBits: number | Long) => Long;
                            shl: (numBits: number | Long) => Long;
                            shiftRight: (numBits: number | Long) => Long;
                            shr: (numBits: number | Long) => Long;
                            shiftRightUnsigned: (numBits: number | Long) => Long;
                            shru: (numBits: number | Long) => Long;
                            shr_u: (numBits: number | Long) => Long;
                            rotateLeft: (numBits: number | Long) => Long;
                            rotl: (numBits: number | Long) => Long;
                            rotateRight: (numBits: number | Long) => Long;
                            rotr: (numBits: number | Long) => Long;
                            subtract: (subtrahend: string | number | Long) => Long;
                            sub: (subtrahend: string | number | Long) => Long;
                            toInt: () => number;
                            toNumber: () => number;
                            toBytes: (le?: boolean | undefined) => number[];
                            toBytesLE: () => number[];
                            toBytesBE: () => number[];
                            toSigned: () => Long;
                            toString: (radix?: number | undefined) => string;
                            toUnsigned: () => Long;
                            xor: (other: string | number | Long) => Long;
                        } & { [K_2 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["nonce"], keyof Long>]: never; }) | undefined;
                        initialAddressSignature?: ({
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            erc191?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_3 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                            erc6492?: ({
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } & {
                                accountId?: string | undefined;
                                blockNumber?: string | number | (Long & {
                                    high: number;
                                    low: number;
                                    unsigned: boolean;
                                    add: (addend: string | number | Long) => Long;
                                    and: (other: string | number | Long) => Long;
                                    compare: (other: string | number | Long) => number;
                                    comp: (other: string | number | Long) => number;
                                    divide: (divisor: string | number | Long) => Long;
                                    div: (divisor: string | number | Long) => Long;
                                    equals: (other: string | number | Long) => boolean;
                                    eq: (other: string | number | Long) => boolean;
                                    getHighBits: () => number;
                                    getHighBitsUnsigned: () => number;
                                    getLowBits: () => number;
                                    getLowBitsUnsigned: () => number;
                                    getNumBitsAbs: () => number;
                                    greaterThan: (other: string | number | Long) => boolean;
                                    gt: (other: string | number | Long) => boolean;
                                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                                    gte: (other: string | number | Long) => boolean;
                                    ge: (other: string | number | Long) => boolean;
                                    isEven: () => boolean;
                                    isNegative: () => boolean;
                                    isOdd: () => boolean;
                                    isPositive: () => boolean;
                                    isZero: () => boolean;
                                    eqz: () => boolean;
                                    lessThan: (other: string | number | Long) => boolean;
                                    lt: (other: string | number | Long) => boolean;
                                    lessThanOrEqual: (other: string | number | Long) => boolean;
                                    lte: (other: string | number | Long) => boolean;
                                    le: (other: string | number | Long) => boolean;
                                    modulo: (other: string | number | Long) => Long;
                                    mod: (other: string | number | Long) => Long;
                                    rem: (other: string | number | Long) => Long;
                                    multiply: (multiplier: string | number | Long) => Long;
                                    mul: (multiplier: string | number | Long) => Long;
                                    negate: () => Long;
                                    neg: () => Long;
                                    not: () => Long;
                                    countLeadingZeros: () => number;
                                    clz: () => number;
                                    countTrailingZeros: () => number;
                                    ctz: () => number;
                                    notEquals: (other: string | number | Long) => boolean;
                                    neq: (other: string | number | Long) => boolean;
                                    ne: (other: string | number | Long) => boolean;
                                    or: (other: string | number | Long) => Long;
                                    shiftLeft: (numBits: number | Long) => Long;
                                    shl: (numBits: number | Long) => Long;
                                    shiftRight: (numBits: number | Long) => Long;
                                    shr: (numBits: number | Long) => Long;
                                    shiftRightUnsigned: (numBits: number | Long) => Long;
                                    shru: (numBits: number | Long) => Long;
                                    shr_u: (numBits: number | Long) => Long;
                                    rotateLeft: (numBits: number | Long) => Long;
                                    rotl: (numBits: number | Long) => Long;
                                    rotateRight: (numBits: number | Long) => Long;
                                    rotr: (numBits: number | Long) => Long;
                                    subtract: (subtrahend: string | number | Long) => Long;
                                    sub: (subtrahend: string | number | Long) => Long;
                                    toInt: () => number;
                                    toNumber: () => number;
                                    toBytes: (le?: boolean | undefined) => number[];
                                    toBytesLE: () => number[];
                                    toBytesBE: () => number[];
                                    toSigned: () => Long;
                                    toString: (radix?: number | undefined) => string;
                                    toUnsigned: () => Long;
                                    xor: (other: string | number | Long) => Long;
                                } & { [K_4 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                signature?: Uint8Array | undefined;
                            } & { [K_5 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                            installationKey?: ({
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & { [K_6 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                            delegatedErc191?: ({
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } & {
                                delegatedKey?: ({
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } & {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: ({
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } & {
                                        ecdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_7 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                        walletEcdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_8 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                    } & { [K_9 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                } & { [K_10 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                signature?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_11 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                            } & { [K_12 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                        } & { [K_13 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"]["initialAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                    } & { [K_14 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["createInbox"], keyof import("../../associations/association.pb").CreateInbox>]: never; }) | undefined;
                    add?: ({
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        newMemberIdentifier?: ({
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } & {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } & { [K_15 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberIdentifier"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                        existingMemberSignature?: ({
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            erc191?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_16 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                            erc6492?: ({
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } & {
                                accountId?: string | undefined;
                                blockNumber?: string | number | (Long & {
                                    high: number;
                                    low: number;
                                    unsigned: boolean;
                                    add: (addend: string | number | Long) => Long;
                                    and: (other: string | number | Long) => Long;
                                    compare: (other: string | number | Long) => number;
                                    comp: (other: string | number | Long) => number;
                                    divide: (divisor: string | number | Long) => Long;
                                    div: (divisor: string | number | Long) => Long;
                                    equals: (other: string | number | Long) => boolean;
                                    eq: (other: string | number | Long) => boolean;
                                    getHighBits: () => number;
                                    getHighBitsUnsigned: () => number;
                                    getLowBits: () => number;
                                    getLowBitsUnsigned: () => number;
                                    getNumBitsAbs: () => number;
                                    greaterThan: (other: string | number | Long) => boolean;
                                    gt: (other: string | number | Long) => boolean;
                                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                                    gte: (other: string | number | Long) => boolean;
                                    ge: (other: string | number | Long) => boolean;
                                    isEven: () => boolean;
                                    isNegative: () => boolean;
                                    isOdd: () => boolean;
                                    isPositive: () => boolean;
                                    isZero: () => boolean;
                                    eqz: () => boolean;
                                    lessThan: (other: string | number | Long) => boolean;
                                    lt: (other: string | number | Long) => boolean;
                                    lessThanOrEqual: (other: string | number | Long) => boolean;
                                    lte: (other: string | number | Long) => boolean;
                                    le: (other: string | number | Long) => boolean;
                                    modulo: (other: string | number | Long) => Long;
                                    mod: (other: string | number | Long) => Long;
                                    rem: (other: string | number | Long) => Long;
                                    multiply: (multiplier: string | number | Long) => Long;
                                    mul: (multiplier: string | number | Long) => Long;
                                    negate: () => Long;
                                    neg: () => Long;
                                    not: () => Long;
                                    countLeadingZeros: () => number;
                                    clz: () => number;
                                    countTrailingZeros: () => number;
                                    ctz: () => number;
                                    notEquals: (other: string | number | Long) => boolean;
                                    neq: (other: string | number | Long) => boolean;
                                    ne: (other: string | number | Long) => boolean;
                                    or: (other: string | number | Long) => Long;
                                    shiftLeft: (numBits: number | Long) => Long;
                                    shl: (numBits: number | Long) => Long;
                                    shiftRight: (numBits: number | Long) => Long;
                                    shr: (numBits: number | Long) => Long;
                                    shiftRightUnsigned: (numBits: number | Long) => Long;
                                    shru: (numBits: number | Long) => Long;
                                    shr_u: (numBits: number | Long) => Long;
                                    rotateLeft: (numBits: number | Long) => Long;
                                    rotl: (numBits: number | Long) => Long;
                                    rotateRight: (numBits: number | Long) => Long;
                                    rotr: (numBits: number | Long) => Long;
                                    subtract: (subtrahend: string | number | Long) => Long;
                                    sub: (subtrahend: string | number | Long) => Long;
                                    toInt: () => number;
                                    toNumber: () => number;
                                    toBytes: (le?: boolean | undefined) => number[];
                                    toBytesLE: () => number[];
                                    toBytesBE: () => number[];
                                    toSigned: () => Long;
                                    toString: (radix?: number | undefined) => string;
                                    toUnsigned: () => Long;
                                    xor: (other: string | number | Long) => Long;
                                } & { [K_17 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                signature?: Uint8Array | undefined;
                            } & { [K_18 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                            installationKey?: ({
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & { [K_19 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                            delegatedErc191?: ({
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } & {
                                delegatedKey?: ({
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } & {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: ({
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } & {
                                        ecdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_20 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                        walletEcdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_21 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                    } & { [K_22 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                } & { [K_23 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                signature?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_24 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                            } & { [K_25 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                        } & { [K_26 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["existingMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                        newMemberSignature?: ({
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            erc191?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_27 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["erc191"], "bytes">]: never; }) | undefined;
                            erc6492?: ({
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } & {
                                accountId?: string | undefined;
                                blockNumber?: string | number | (Long & {
                                    high: number;
                                    low: number;
                                    unsigned: boolean;
                                    add: (addend: string | number | Long) => Long;
                                    and: (other: string | number | Long) => Long;
                                    compare: (other: string | number | Long) => number;
                                    comp: (other: string | number | Long) => number;
                                    divide: (divisor: string | number | Long) => Long;
                                    div: (divisor: string | number | Long) => Long;
                                    equals: (other: string | number | Long) => boolean;
                                    eq: (other: string | number | Long) => boolean;
                                    getHighBits: () => number;
                                    getHighBitsUnsigned: () => number;
                                    getLowBits: () => number;
                                    getLowBitsUnsigned: () => number;
                                    getNumBitsAbs: () => number;
                                    greaterThan: (other: string | number | Long) => boolean;
                                    gt: (other: string | number | Long) => boolean;
                                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                                    gte: (other: string | number | Long) => boolean;
                                    ge: (other: string | number | Long) => boolean;
                                    isEven: () => boolean;
                                    isNegative: () => boolean;
                                    isOdd: () => boolean;
                                    isPositive: () => boolean;
                                    isZero: () => boolean;
                                    eqz: () => boolean;
                                    lessThan: (other: string | number | Long) => boolean;
                                    lt: (other: string | number | Long) => boolean;
                                    lessThanOrEqual: (other: string | number | Long) => boolean;
                                    lte: (other: string | number | Long) => boolean;
                                    le: (other: string | number | Long) => boolean;
                                    modulo: (other: string | number | Long) => Long;
                                    mod: (other: string | number | Long) => Long;
                                    rem: (other: string | number | Long) => Long;
                                    multiply: (multiplier: string | number | Long) => Long;
                                    mul: (multiplier: string | number | Long) => Long;
                                    negate: () => Long;
                                    neg: () => Long;
                                    not: () => Long;
                                    countLeadingZeros: () => number;
                                    clz: () => number;
                                    countTrailingZeros: () => number;
                                    ctz: () => number;
                                    notEquals: (other: string | number | Long) => boolean;
                                    neq: (other: string | number | Long) => boolean;
                                    ne: (other: string | number | Long) => boolean;
                                    or: (other: string | number | Long) => Long;
                                    shiftLeft: (numBits: number | Long) => Long;
                                    shl: (numBits: number | Long) => Long;
                                    shiftRight: (numBits: number | Long) => Long;
                                    shr: (numBits: number | Long) => Long;
                                    shiftRightUnsigned: (numBits: number | Long) => Long;
                                    shru: (numBits: number | Long) => Long;
                                    shr_u: (numBits: number | Long) => Long;
                                    rotateLeft: (numBits: number | Long) => Long;
                                    rotl: (numBits: number | Long) => Long;
                                    rotateRight: (numBits: number | Long) => Long;
                                    rotr: (numBits: number | Long) => Long;
                                    subtract: (subtrahend: string | number | Long) => Long;
                                    sub: (subtrahend: string | number | Long) => Long;
                                    toInt: () => number;
                                    toNumber: () => number;
                                    toBytes: (le?: boolean | undefined) => number[];
                                    toBytesLE: () => number[];
                                    toBytesBE: () => number[];
                                    toSigned: () => Long;
                                    toString: (radix?: number | undefined) => string;
                                    toUnsigned: () => Long;
                                    xor: (other: string | number | Long) => Long;
                                } & { [K_28 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                signature?: Uint8Array | undefined;
                            } & { [K_29 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                            installationKey?: ({
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & { [K_30 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                            delegatedErc191?: ({
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } & {
                                delegatedKey?: ({
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } & {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: ({
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } & {
                                        ecdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_31 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                        walletEcdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_32 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                    } & { [K_33 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                } & { [K_34 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                signature?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_35 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                            } & { [K_36 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                        } & { [K_37 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"]["newMemberSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                    } & { [K_38 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["add"], keyof import("../../associations/association.pb").AddAssociation>]: never; }) | undefined;
                    revoke?: ({
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        memberToRevoke?: ({
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } & {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } & { [K_39 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["memberToRevoke"], keyof import("../../associations/association.pb").MemberIdentifier>]: never; }) | undefined;
                        recoveryAddressSignature?: ({
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            erc191?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_40 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                            erc6492?: ({
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } & {
                                accountId?: string | undefined;
                                blockNumber?: string | number | (Long & {
                                    high: number;
                                    low: number;
                                    unsigned: boolean;
                                    add: (addend: string | number | Long) => Long;
                                    and: (other: string | number | Long) => Long;
                                    compare: (other: string | number | Long) => number;
                                    comp: (other: string | number | Long) => number;
                                    divide: (divisor: string | number | Long) => Long;
                                    div: (divisor: string | number | Long) => Long;
                                    equals: (other: string | number | Long) => boolean;
                                    eq: (other: string | number | Long) => boolean;
                                    getHighBits: () => number;
                                    getHighBitsUnsigned: () => number;
                                    getLowBits: () => number;
                                    getLowBitsUnsigned: () => number;
                                    getNumBitsAbs: () => number;
                                    greaterThan: (other: string | number | Long) => boolean;
                                    gt: (other: string | number | Long) => boolean;
                                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                                    gte: (other: string | number | Long) => boolean;
                                    ge: (other: string | number | Long) => boolean;
                                    isEven: () => boolean;
                                    isNegative: () => boolean;
                                    isOdd: () => boolean;
                                    isPositive: () => boolean;
                                    isZero: () => boolean;
                                    eqz: () => boolean;
                                    lessThan: (other: string | number | Long) => boolean;
                                    lt: (other: string | number | Long) => boolean;
                                    lessThanOrEqual: (other: string | number | Long) => boolean;
                                    lte: (other: string | number | Long) => boolean;
                                    le: (other: string | number | Long) => boolean;
                                    modulo: (other: string | number | Long) => Long;
                                    mod: (other: string | number | Long) => Long;
                                    rem: (other: string | number | Long) => Long;
                                    multiply: (multiplier: string | number | Long) => Long;
                                    mul: (multiplier: string | number | Long) => Long;
                                    negate: () => Long;
                                    neg: () => Long;
                                    not: () => Long;
                                    countLeadingZeros: () => number;
                                    clz: () => number;
                                    countTrailingZeros: () => number;
                                    ctz: () => number;
                                    notEquals: (other: string | number | Long) => boolean;
                                    neq: (other: string | number | Long) => boolean;
                                    ne: (other: string | number | Long) => boolean;
                                    or: (other: string | number | Long) => Long;
                                    shiftLeft: (numBits: number | Long) => Long;
                                    shl: (numBits: number | Long) => Long;
                                    shiftRight: (numBits: number | Long) => Long;
                                    shr: (numBits: number | Long) => Long;
                                    shiftRightUnsigned: (numBits: number | Long) => Long;
                                    shru: (numBits: number | Long) => Long;
                                    shr_u: (numBits: number | Long) => Long;
                                    rotateLeft: (numBits: number | Long) => Long;
                                    rotl: (numBits: number | Long) => Long;
                                    rotateRight: (numBits: number | Long) => Long;
                                    rotr: (numBits: number | Long) => Long;
                                    subtract: (subtrahend: string | number | Long) => Long;
                                    sub: (subtrahend: string | number | Long) => Long;
                                    toInt: () => number;
                                    toNumber: () => number;
                                    toBytes: (le?: boolean | undefined) => number[];
                                    toBytesLE: () => number[];
                                    toBytesBE: () => number[];
                                    toSigned: () => Long;
                                    toString: (radix?: number | undefined) => string;
                                    toUnsigned: () => Long;
                                    xor: (other: string | number | Long) => Long;
                                } & { [K_41 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                signature?: Uint8Array | undefined;
                            } & { [K_42 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                            installationKey?: ({
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & { [K_43 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                            delegatedErc191?: ({
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } & {
                                delegatedKey?: ({
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } & {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: ({
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } & {
                                        ecdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_44 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                        walletEcdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_45 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                    } & { [K_46 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                } & { [K_47 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                signature?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_48 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                            } & { [K_49 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                        } & { [K_50 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"]["recoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                    } & { [K_51 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["revoke"], keyof import("../../associations/association.pb").RevokeAssociation>]: never; }) | undefined;
                    changeRecoveryAddress?: ({
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } & {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: ({
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } & {
                            erc191?: ({
                                bytes?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                            } & { [K_52 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc191"], "bytes">]: never; }) | undefined;
                            erc6492?: ({
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } & {
                                accountId?: string | undefined;
                                blockNumber?: string | number | (Long & {
                                    high: number;
                                    low: number;
                                    unsigned: boolean;
                                    add: (addend: string | number | Long) => Long;
                                    and: (other: string | number | Long) => Long;
                                    compare: (other: string | number | Long) => number;
                                    comp: (other: string | number | Long) => number;
                                    divide: (divisor: string | number | Long) => Long;
                                    div: (divisor: string | number | Long) => Long;
                                    equals: (other: string | number | Long) => boolean;
                                    eq: (other: string | number | Long) => boolean;
                                    getHighBits: () => number;
                                    getHighBitsUnsigned: () => number;
                                    getLowBits: () => number;
                                    getLowBitsUnsigned: () => number;
                                    getNumBitsAbs: () => number;
                                    greaterThan: (other: string | number | Long) => boolean;
                                    gt: (other: string | number | Long) => boolean;
                                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                                    gte: (other: string | number | Long) => boolean;
                                    ge: (other: string | number | Long) => boolean;
                                    isEven: () => boolean;
                                    isNegative: () => boolean;
                                    isOdd: () => boolean;
                                    isPositive: () => boolean;
                                    isZero: () => boolean;
                                    eqz: () => boolean;
                                    lessThan: (other: string | number | Long) => boolean;
                                    lt: (other: string | number | Long) => boolean;
                                    lessThanOrEqual: (other: string | number | Long) => boolean;
                                    lte: (other: string | number | Long) => boolean;
                                    le: (other: string | number | Long) => boolean;
                                    modulo: (other: string | number | Long) => Long;
                                    mod: (other: string | number | Long) => Long;
                                    rem: (other: string | number | Long) => Long;
                                    multiply: (multiplier: string | number | Long) => Long;
                                    mul: (multiplier: string | number | Long) => Long;
                                    negate: () => Long;
                                    neg: () => Long;
                                    not: () => Long;
                                    countLeadingZeros: () => number;
                                    clz: () => number;
                                    countTrailingZeros: () => number;
                                    ctz: () => number;
                                    notEquals: (other: string | number | Long) => boolean;
                                    neq: (other: string | number | Long) => boolean;
                                    ne: (other: string | number | Long) => boolean;
                                    or: (other: string | number | Long) => Long;
                                    shiftLeft: (numBits: number | Long) => Long;
                                    shl: (numBits: number | Long) => Long;
                                    shiftRight: (numBits: number | Long) => Long;
                                    shr: (numBits: number | Long) => Long;
                                    shiftRightUnsigned: (numBits: number | Long) => Long;
                                    shru: (numBits: number | Long) => Long;
                                    shr_u: (numBits: number | Long) => Long;
                                    rotateLeft: (numBits: number | Long) => Long;
                                    rotl: (numBits: number | Long) => Long;
                                    rotateRight: (numBits: number | Long) => Long;
                                    rotr: (numBits: number | Long) => Long;
                                    subtract: (subtrahend: string | number | Long) => Long;
                                    sub: (subtrahend: string | number | Long) => Long;
                                    toInt: () => number;
                                    toNumber: () => number;
                                    toBytes: (le?: boolean | undefined) => number[];
                                    toBytesLE: () => number[];
                                    toBytesBE: () => number[];
                                    toSigned: () => Long;
                                    toString: (radix?: number | undefined) => string;
                                    toUnsigned: () => Long;
                                    xor: (other: string | number | Long) => Long;
                                } & { [K_53 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"]["blockNumber"], keyof Long>]: never; }) | undefined;
                                signature?: Uint8Array | undefined;
                            } & { [K_54 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["erc6492"], keyof import("../../associations/signature.pb").SmartContractWalletSignature>]: never; }) | undefined;
                            installationKey?: ({
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } & { [K_55 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["installationKey"], keyof import("../../associations/signature.pb").RecoverableEd25519Signature>]: never; }) | undefined;
                            delegatedErc191?: ({
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } & {
                                delegatedKey?: ({
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } & {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: ({
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } & {
                                        ecdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_56 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["ecdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_ECDSACompact>]: never; }) | undefined;
                                        walletEcdsaCompact?: ({
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } & { [K_57 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"]["walletEcdsaCompact"], keyof import("../../../message_contents/signature.pb").Signature_WalletECDSACompact>]: never; }) | undefined;
                                    } & { [K_58 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"]["signature"], keyof import("../../../message_contents/signature.pb").Signature>]: never; }) | undefined;
                                } & { [K_59 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["delegatedKey"], keyof import("../../../message_contents/public_key.pb").SignedPublicKey>]: never; }) | undefined;
                                signature?: ({
                                    bytes?: Uint8Array | undefined;
                                } & {
                                    bytes?: Uint8Array | undefined;
                                } & { [K_60 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"]["signature"], "bytes">]: never; }) | undefined;
                            } & { [K_61 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"]["delegatedErc191"], keyof import("../../associations/signature.pb").LegacyDelegatedSignature>]: never; }) | undefined;
                        } & { [K_62 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"]["existingRecoveryAddressSignature"], keyof import("../../associations/signature.pb").Signature>]: never; }) | undefined;
                    } & { [K_63 in Exclude<keyof I["updates"][number]["update"]["actions"][number]["changeRecoveryAddress"], keyof import("../../associations/association.pb").ChangeRecoveryAddress>]: never; }) | undefined;
                } & { [K_64 in Exclude<keyof I["updates"][number]["update"]["actions"][number], keyof import("../../associations/association.pb").IdentityAction>]: never; })[] & { [K_65 in Exclude<keyof I["updates"][number]["update"]["actions"], keyof {
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                }[]>]: never; }) | undefined;
                clientTimestampNs?: string | number | (Long & {
                    high: number;
                    low: number;
                    unsigned: boolean;
                    add: (addend: string | number | Long) => Long;
                    and: (other: string | number | Long) => Long;
                    compare: (other: string | number | Long) => number;
                    comp: (other: string | number | Long) => number;
                    divide: (divisor: string | number | Long) => Long;
                    div: (divisor: string | number | Long) => Long;
                    equals: (other: string | number | Long) => boolean;
                    eq: (other: string | number | Long) => boolean;
                    getHighBits: () => number;
                    getHighBitsUnsigned: () => number;
                    getLowBits: () => number;
                    getLowBitsUnsigned: () => number;
                    getNumBitsAbs: () => number;
                    greaterThan: (other: string | number | Long) => boolean;
                    gt: (other: string | number | Long) => boolean;
                    greaterThanOrEqual: (other: string | number | Long) => boolean;
                    gte: (other: string | number | Long) => boolean;
                    ge: (other: string | number | Long) => boolean;
                    isEven: () => boolean;
                    isNegative: () => boolean;
                    isOdd: () => boolean;
                    isPositive: () => boolean;
                    isZero: () => boolean;
                    eqz: () => boolean;
                    lessThan: (other: string | number | Long) => boolean;
                    lt: (other: string | number | Long) => boolean;
                    lessThanOrEqual: (other: string | number | Long) => boolean;
                    lte: (other: string | number | Long) => boolean;
                    le: (other: string | number | Long) => boolean;
                    modulo: (other: string | number | Long) => Long;
                    mod: (other: string | number | Long) => Long;
                    rem: (other: string | number | Long) => Long;
                    multiply: (multiplier: string | number | Long) => Long;
                    mul: (multiplier: string | number | Long) => Long;
                    negate: () => Long;
                    neg: () => Long;
                    not: () => Long;
                    countLeadingZeros: () => number;
                    clz: () => number;
                    countTrailingZeros: () => number;
                    ctz: () => number;
                    notEquals: (other: string | number | Long) => boolean;
                    neq: (other: string | number | Long) => boolean;
                    ne: (other: string | number | Long) => boolean;
                    or: (other: string | number | Long) => Long;
                    shiftLeft: (numBits: number | Long) => Long;
                    shl: (numBits: number | Long) => Long;
                    shiftRight: (numBits: number | Long) => Long;
                    shr: (numBits: number | Long) => Long;
                    shiftRightUnsigned: (numBits: number | Long) => Long;
                    shru: (numBits: number | Long) => Long;
                    shr_u: (numBits: number | Long) => Long;
                    rotateLeft: (numBits: number | Long) => Long;
                    rotl: (numBits: number | Long) => Long;
                    rotateRight: (numBits: number | Long) => Long;
                    rotr: (numBits: number | Long) => Long;
                    subtract: (subtrahend: string | number | Long) => Long;
                    sub: (subtrahend: string | number | Long) => Long;
                    toInt: () => number;
                    toNumber: () => number;
                    toBytes: (le?: boolean | undefined) => number[];
                    toBytesLE: () => number[];
                    toBytesBE: () => number[];
                    toSigned: () => Long;
                    toString: (radix?: number | undefined) => string;
                    toUnsigned: () => Long;
                    xor: (other: string | number | Long) => Long;
                } & { [K_66 in Exclude<keyof I["updates"][number]["update"]["clientTimestampNs"], keyof Long>]: never; }) | undefined;
                inboxId?: string | undefined;
            } & { [K_67 in Exclude<keyof I["updates"][number]["update"], keyof IdentityUpdate>]: never; }) | undefined;
        } & { [K_68 in Exclude<keyof I["updates"][number], keyof GetIdentityUpdatesResponse_IdentityUpdateLog>]: never; })[] & { [K_69 in Exclude<keyof I["updates"], keyof {
            sequenceId?: string | number | Long | undefined;
            serverTimestampNs?: string | number | Long | undefined;
            update?: {
                actions?: {
                    createInbox?: {
                        initialAddress?: string | undefined;
                        nonce?: string | number | Long | undefined;
                        initialAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    add?: {
                        newMemberIdentifier?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        existingMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                        newMemberSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    revoke?: {
                        memberToRevoke?: {
                            address?: string | undefined;
                            installationPublicKey?: Uint8Array | undefined;
                        } | undefined;
                        recoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                    changeRecoveryAddress?: {
                        newRecoveryAddress?: string | undefined;
                        existingRecoveryAddressSignature?: {
                            erc191?: {
                                bytes?: Uint8Array | undefined;
                            } | undefined;
                            erc6492?: {
                                accountId?: string | undefined;
                                blockNumber?: string | number | Long | undefined;
                                signature?: Uint8Array | undefined;
                            } | undefined;
                            installationKey?: {
                                bytes?: Uint8Array | undefined;
                                publicKey?: Uint8Array | undefined;
                            } | undefined;
                            delegatedErc191?: {
                                delegatedKey?: {
                                    keyBytes?: Uint8Array | undefined;
                                    signature?: {
                                        ecdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                        walletEcdsaCompact?: {
                                            bytes?: Uint8Array | undefined;
                                            recovery?: number | undefined;
                                        } | undefined;
                                    } | undefined;
                                } | undefined;
                                signature?: {
                                    bytes?: Uint8Array | undefined;
                                } | undefined;
                            } | undefined;
                        } | undefined;
                    } | undefined;
                }[] | undefined;
                clientTimestampNs?: string | number | Long | undefined;
                inboxId?: string | undefined;
            } | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_70 in Exclude<keyof I, keyof GetIdentityUpdatesResponse_Response>]: never; }>(object: I): GetIdentityUpdatesResponse_Response;
};
export declare const GetInboxIdsRequest: {
    encode(message: GetInboxIdsRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetInboxIdsRequest;
    fromJSON(object: any): GetInboxIdsRequest;
    toJSON(message: GetInboxIdsRequest): unknown;
    fromPartial<I extends {
        requests?: {
            address?: string | undefined;
        }[] | undefined;
    } & {
        requests?: ({
            address?: string | undefined;
        }[] & ({
            address?: string | undefined;
        } & {
            address?: string | undefined;
        } & { [K in Exclude<keyof I["requests"][number], "address">]: never; })[] & { [K_1 in Exclude<keyof I["requests"], keyof {
            address?: string | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "requests">]: never; }>(object: I): GetInboxIdsRequest;
};
export declare const GetInboxIdsRequest_Request: {
    encode(message: GetInboxIdsRequest_Request, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetInboxIdsRequest_Request;
    fromJSON(object: any): GetInboxIdsRequest_Request;
    toJSON(message: GetInboxIdsRequest_Request): unknown;
    fromPartial<I extends {
        address?: string | undefined;
    } & {
        address?: string | undefined;
    } & { [K in Exclude<keyof I, "address">]: never; }>(object: I): GetInboxIdsRequest_Request;
};
export declare const GetInboxIdsResponse: {
    encode(message: GetInboxIdsResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetInboxIdsResponse;
    fromJSON(object: any): GetInboxIdsResponse;
    toJSON(message: GetInboxIdsResponse): unknown;
    fromPartial<I extends {
        responses?: {
            address?: string | undefined;
            inboxId?: string | undefined;
        }[] | undefined;
    } & {
        responses?: ({
            address?: string | undefined;
            inboxId?: string | undefined;
        }[] & ({
            address?: string | undefined;
            inboxId?: string | undefined;
        } & {
            address?: string | undefined;
            inboxId?: string | undefined;
        } & { [K in Exclude<keyof I["responses"][number], keyof GetInboxIdsResponse_Response>]: never; })[] & { [K_1 in Exclude<keyof I["responses"], keyof {
            address?: string | undefined;
            inboxId?: string | undefined;
        }[]>]: never; }) | undefined;
    } & { [K_2 in Exclude<keyof I, "responses">]: never; }>(object: I): GetInboxIdsResponse;
};
export declare const GetInboxIdsResponse_Response: {
    encode(message: GetInboxIdsResponse_Response, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number | undefined): GetInboxIdsResponse_Response;
    fromJSON(object: any): GetInboxIdsResponse_Response;
    toJSON(message: GetInboxIdsResponse_Response): unknown;
    fromPartial<I extends {
        address?: string | undefined;
        inboxId?: string | undefined;
    } & {
        address?: string | undefined;
        inboxId?: string | undefined;
    } & { [K in Exclude<keyof I, keyof GetInboxIdsResponse_Response>]: never; }>(object: I): GetInboxIdsResponse_Response;
};
/** RPCs for the new MLS API */
export interface IdentityApi {
    /**
     * Publishes an identity update for an XID or wallet. An identity update may
     * consist of multiple identity actions that have been batch signed.
     */
    PublishIdentityUpdate(request: PublishIdentityUpdateRequest): Promise<PublishIdentityUpdateResponse>;
    /**
     * Used to check for changes related to members of a group.
     * Would return an array of any new installations associated with the wallet
     * address, and any revocations that have happened.
     */
    GetIdentityUpdates(request: GetIdentityUpdatesRequest): Promise<GetIdentityUpdatesResponse>;
    /** Retrieve the XIDs for the given addresses */
    GetInboxIds(request: GetInboxIdsRequest): Promise<GetInboxIdsResponse>;
    /** Verify an unverified smart contract wallet signature */
    VerifySmartContractWalletSignatures(request: VerifySmartContractWalletSignaturesRequest): Promise<VerifySmartContractWalletSignaturesResponse>;
}
export declare class IdentityApiClientImpl implements IdentityApi {
    private readonly rpc;
    constructor(rpc: Rpc);
    PublishIdentityUpdate(request: PublishIdentityUpdateRequest): Promise<PublishIdentityUpdateResponse>;
    GetIdentityUpdates(request: GetIdentityUpdatesRequest): Promise<GetIdentityUpdatesResponse>;
    GetInboxIds(request: GetInboxIdsRequest): Promise<GetInboxIdsResponse>;
    VerifySmartContractWalletSignatures(request: VerifySmartContractWalletSignaturesRequest): Promise<VerifySmartContractWalletSignaturesResponse>;
}
interface Rpc {
    request(service: string, method: string, data: Uint8Array): Promise<Uint8Array>;
}
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
export declare type DeepPartial<T> = T extends Builtin ? T : T extends Long ? string | number | Long : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
declare type KeysOfUnion<T> = T extends T ? keyof T : never;
export declare type Exact<P, I extends P> = P extends Builtin ? P : P & {
    [K in keyof P]: Exact<P[K], I[K]>;
} & {
    [K in Exclude<keyof I, KeysOfUnion<P>>]: never;
};
export {};
